{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tasks List","text":""},{"location":"#00-setup","title":"00-Setup","text":"<p>\u2003 \ud83e\uddea Setup (Overview)  \u2003 \ud83e\uddea Install Tools  \u2003 \ud83e\uddea Setup GitHub </p>"},{"location":"#01-working-with-repo","title":"01-Working-With-Repo","text":"<p>\u2003 \ud83e\uddea Working-With-Repo (Overview) \u2003\u2003 \ud83e\uddea Creating a Repository (Web) \u2003\u2003 \ud83e\uddea Creating a Repository (MCP) \u2003\u2003 \ud83e\uddea Creating a Repository (gh) \u2003 \ud83e\uddea Cloning a Repository \u2003 \ud83e\uddea Making Changes </p>"},{"location":"#02-working-with-pr","title":"02-Working-With-PR","text":"<p>\u2003 \ud83e\uddea Pull Requests (Overview) \u2003\u2003 \ud83e\uddea Creating a PR (Web) \u2003\u2003 \ud83e\uddea Creating PR (MCP) \u2003 \ud83e\uddea PR - Track Changes \u2003 \ud83e\uddea PR - Commit Changes \u2003 \ud83e\uddea PR - Code Review \u2003 \ud83e\uddea PR - Track Review \u2003 \ud83e\uddea PR - Template \u2003 \ud83e\uddea PR - CODEOWNERS </p>"},{"location":"#03-configuration","title":"03-Configuration","text":"<p>\u2003 \ud83e\uddea Configuration (Overview) \u2003 \ud83e\uddea Template Repository \u2003 \ud83e\uddea Ruleset \u2003 \ud83e\uddea CodeScan </p>"},{"location":"#04-collaboration","title":"04-Collaboration","text":"<p>\u2003 \ud83e\uddea Collaboration (Overview) \u2003 \ud83e\uddea Issues Management \u2003 \ud83e\uddea Wiki Documentation \u2003 \ud83e\uddea Discussions &amp; Community \u2003 \ud83e\uddea Projects &amp; Workflows \u2003 \ud83e\uddea Teams &amp; Permissions \u2003 \ud83e\uddea Notifications \u2003 \ud83e\uddea Advanced Features \u2003 \ud83e\uddea GitHub Pages</p>"},{"location":"00-Setup/","title":"Lab 00: Setup","text":"<p>\u2003\u2699\ufe0f\u2003This lab will guide you through the essential steps to prepare your environment for working with Git and GitHub. \u2003\u2699\ufe0f\u2003By the end of this lab, you will have the necessary tools installed and your GitHub account configured. \u2003\u2699\ufe0f\u2003After completing this lab, you will be prepared to start working with repositories.</p>"},{"location":"00-Setup/#lab-contents","title":"Lab Contents","text":"<p> Install Tools Setup GitHub </p>"},{"location":"00-Setup/#summary","title":"Summary","text":"<p>By completing this lab you will be able to:</p> <p>\u2003\u2705\u2003Installing required tools (Git, GitHub CLI) \u2003\u2705\u2003Setting up your Git identity \u2003\u2705\u2003Creating and configuring your GitHub account \u2003\u2705\u2003Setting up SSH keys for secure, passwordless authentication</p>"},{"location":"00-Setup/01-Install-Tools/","title":"Installing Tools","text":"<p>About this Guide</p> <p>This guide will walk you through installing git, creating a GitHub account and configuring it for the first time.</p>"},{"location":"00-Setup/01-Install-Tools/#1-installing-git","title":"1. Installing Git","text":"<ul> <li>First, you need to install Git locally.</li> </ul> <p>Installing Git</p>  macOS Windows Linux <p>Open Terminal and run: <pre><code># Requires [Homebrew](https://brew.sh/)\nbrew install git\n</code></pre></p> <p>Download and install from git-scm.com.</p> <p>Use your package manager, for example: <pre><code>sudo apt install git\n</code></pre></p>"},{"location":"00-Setup/01-Install-Tools/#2-installing-gh","title":"2. Installing <code>gh</code>","text":"<ul> <li>To work with GitHub from your computer, you can use the optional GitHub CLI (<code>gh</code>) tool to interact with GitHub directly from your terminal.</li> <li>Click on the section below to expand it</li> </ul> <p>Installing GitHub CLI</p>  macOS Windows Linux <p>Open Terminal and run: <pre><code># Requires [Homebrew](https://brew.sh/)\nbrew install gh\n</code></pre></p> <p>Download and install from git-scm.com.</p> <p>Use your package manager, for example: <pre><code>sudo apt install gh\n</code></pre></p>"},{"location":"00-Setup/01-Install-Tools/#3-set-up-your-git-identity","title":"3. Set Up Your Git Identity","text":"<ul> <li>In order to use Git and GitHub effectively, you need to configure your Git identity.</li> <li>Your Git identity is defined by your name and email address, which will be associated with your commits.</li> <li> <p>Open your terminal and run the following commands to set your global Git configuration:    <pre><code># Configure Git with your user information\n# Replace with the name and email you used for GitHub.\ngit config --global user.name \"&lt;Your Name&gt;\"\ngit config --global user.email \"&lt;your-email@example.com&gt;\"\n</code></pre></p> <pre><code># Example:\ngit config --global user.name \"Nir Geier\"\ngit config --global user.email \"nir.geier@gmail.com\"\n</code></pre> </li> </ul>"},{"location":"00-Setup/01-Install-Tools/#4-tools-used","title":"4. Tools Used","text":"<ul> <li>GitHub Web: Web browser and GitHub account</li> <li>GitHub CLI: GitHub CLI installed (<code>gh</code> command)</li> <li>GitHub MCP: VS Code with GitHub Copilot MCP extension</li> </ul>"},{"location":"00-Setup/01-Install-Tools/#feature-comparison","title":"Feature Comparison","text":"Feature GitHub Web GitHub CLI GitHub MCP Ease of Use Beginner-friendly Developer-focused AI-assisted Speed Medium Fast Very Fast Automation Limited High Very High Customization Good Excellent Good Offline Capability No Yes No Bulk Operations No Yes Limited"},{"location":"00-Setup/02-Setup-GitHub/","title":"Setup GitHub","text":"<p>About this Guide</p> <p>This guide will walk you through setting up your GitHub account and configuring it for the first time.</p>"},{"location":"00-Setup/02-Setup-GitHub/#1-create-github-account","title":"1. Create GitHub Account","text":"<ol> <li>Go to https://github.com/.</li> <li>Click Sign up in the top-right corner.</li> <li>Enter your email address and click Continue.</li> <li>Create a strong password and click Continue.</li> <li>Choose a username (this will be your public identity on GitHub).</li> <li>Follow the prompts to verify your account (you may need to solve a puzzle or enter a code sent to your email).</li> <li>Choose your plan (the free plan is sufficient for most users).</li> <li>Complete the setup by answering a few questions (optional) and click Complete setup.</li> </ol>"},{"location":"00-Setup/02-Setup-GitHub/#2-verify-your-email-address","title":"2. Verify Your Email Address","text":"<ol> <li>Check your email inbox for a message from GitHub.</li> <li>Click the verification link in the email to activate your account.</li> </ol>"},{"location":"00-Setup/02-Setup-GitHub/#3-set-up-your-profile","title":"3. Set Up Your Profile","text":"<ol> <li>Click your profile icon in the top-right and select Your profile.</li> <li>Click Edit profile to add your name, bio, location, and profile picture.</li> <li>Save your changes.</li> </ol>"},{"location":"00-Setup/02-Setup-GitHub/#4-generate-ssh-key","title":"4. Generate SSH Key","text":"<ul> <li>When working with Git and GitHub, it\u2019s a good idea to set up SSH keys for secure authentication.</li> <li> <p>SSH keys are a pair of cryptographic keys that can be used to authenticate to GitHub without needing to enter your username and password every time.</p> </li> <li> <p>In your terminal, run:   <pre><code># Generate a new SSH key\n# -C is optional for email association with your GitHub account\nssh-keygen -t rsa -C \"your-email@example.com\"\n</code></pre></p> </li> <li> <p>This will create two files:</p> File Description <code>~/.ssh/id_rsa</code> Your private key (keep this secret) <code>~/.ssh/id_rsa.pub</code> Your public key (can be shared) <pre><code># Example output\n$ ssh-keygen -t rsa -C \"your-email@example.com\"\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa\nYour public key has been saved in /root/.ssh/id_rsa.pub &lt;&lt;&lt; &lt;&lt;&lt; &lt;&lt;&lt; This is the key you need\nThe key fingerprint is:\nSHA256:47MfTsMWlEN8PYpSGvYWlLd4u4fE4njqHrs53+oxEZM your-email@example.com\nThe key`s randomart image is:\n+---[RSA 3072]----+\n|         oo. .   |\n|        o.=oo o  |\n|       . =E* o . |\n|        o.=++    |\n|        Sooo .   |\n|       . o.o+    |\n|        +oOo o   |\n|        oXo*o .  |\n|       oOO*...   |\n+----[SHA256]-----+\n</code></pre> </li> <li> <p>Press Enter to accept the default file location and do not set a passphrase or you will be prompted to enter it each time you use the key.</p> </li> </ul>"},{"location":"00-Setup/02-Setup-GitHub/#5-add-your-ssh-to-ssh-agent","title":"5. Add your SSH to ssh-agent","text":"<ul> <li>If you are using Windows, make sure you have Git Bash installed.</li> <li>If you are using Linux, make sure you have the <code>ssh-agent</code> package installed.</li> <li>If you are using macOS, you can use the built-in <code>ssh-agent</code>.</li> <li>Open Terminal and run:     <pre><code>eval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_rsa\n</code></pre></li> </ul>"},{"location":"00-Setup/02-Setup-GitHub/#6-add-your-ssh-to-github","title":"6. Add your SSH to GitHub","text":"<ol> <li>Copy your public key to your clipboard:   <pre><code>pbcopy &lt; ~/.ssh/id_rsa.pub  # macOS\ncat ~/.ssh/id_rsa.pub       # Linux/Windows, then copy manually\n</code></pre></li> <li>Go to GitHub site &gt; Settings &gt; SSH and GPG keys &gt; New SSH key.</li> <li>Paste your key, give it a title, and save.</li> </ol> <p>Adding ssh key using gh</p> <ul> <li>You can also use gh using: <code>gh repo deploy-key</code></li> <li>docs:  https://cli.github.com/manual/gh_ssh-key_add https://cli.github.com/manual/gh_repo_deploy-key</li> </ul>"},{"location":"00-Setup/02-Setup-GitHub/#7-test-your-setup","title":"7. Test Your Setup","text":"<ul> <li> <p>Run the following command to test your SSH connection:</p> <pre><code>ssh -T git@github.com\n</code></pre> </li> <li> <p>You should see a message like:</p> <pre><code>Hi &lt;username&gt;! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre> </li> </ul>"},{"location":"01-Working-With-Repo/","title":"Lab 01: Working With Repositories","text":"<p>\u2003\u2699\ufe0f\u2003This lab guides you through the essential tasks for working with GitHub repositories \u2003\u2699\ufe0f\u2003You will learn how to create, clone, modify, commit, and push changes to repositories using different methods and tools.</p>"},{"location":"01-Working-With-Repo/#lab-contents","title":"Lab Contents","text":"<p>\u2003\ud83c\udd95\u2003Creating a Repository \u2003\u2003\ud83c\udf0e\u2003Creating a Repository (Web)  \u2003\u2003\ud83d\udd87\u2003Creating a Repository (MCP) Creating a Repository (gh) \u2003\ud83c\udf3f\u2003Creating Branches  \u2003\ud83e\uddec\u2003Cloning a Repository  \u2003\ud83d\udcdd\u2003Making Changes </p>"},{"location":"01-Working-With-Repo/#summary","title":"Summary","text":"<p>By completing this lab, you will be able to:</p> <p>\u2003\u2003\u2705\u2003Create new repositories using multiple methods (MCP, Web, CLI) \u2003\u2003\u2705\u2003Clone repositories to your local machine \u2003\u2003\u2705\u2003Make and track changes to files \u2003\u2003\u2705\u2003Commit your work with meaningful messages \u2003\u2003\u2705\u2003Push your changes to GitHub for collaboration</p>"},{"location":"01-Working-With-Repo/01a-Creating-Repo-Web/","title":"Creating a GitHub Repository Using <code>GitHub Web</code>","text":"<p>\u2699\ufe0f\u2003This guide will walk you through the process of creating a new repository on GitHub using the web interface.  \u2699\ufe0f\u2003 Follow the steps below to set up your project repository quickly and efficiently.</p>"},{"location":"01-Working-With-Repo/01a-Creating-Repo-Web/#prerequisites","title":"Prerequisites","text":"<ul> <li>A GitHub account (Sign up here if you don\u2019t have one)</li> <li>A web browser (e.g., Chrome, Firefox, Safari)</li> </ul> <p>Task: Create a new GitHub repository</p>"},{"location":"01-Working-With-Repo/01a-Creating-Repo-Web/#1-creating-a-new-repository","title":"1. Creating a New Repository","text":"<ol> <li>Open your web browser and go to https://github.com.</li> <li>Click Sign in at the top right corner and enter your credentials.</li> <li>Once logged in, click the <code>Repositories</code> tab.</li> <li>Click on the New button to create a new repository.</li> <li>Fill in the repository details as prompted.<ul> <li>Owner: Choose your personal account or an organization you belong to.</li> <li>Repository name: Enter a unique name for your repository (e.g., <code>my-first-repo</code>).</li> <li>Description (optional): Add a short description of your project.</li> <li>Visibility:<ul> <li>Public: Anyone can see this repository.</li> <li>Private: Only you and people you explicitly share with can see this repository.</li> </ul> </li> <li>(Optional) Initialize this repository with:</li> <li>Add a README file: Recommended for project documentation.</li> <li>.gitignore: Choose a template if you want to ignore certain files.</li> <li>Choose a license: Select a license for your project.</li> </ul> </li> </ol>"},{"location":"01-Working-With-Repo/01a-Creating-Repo-Web/#2-create-the-repository","title":"2: Create the Repository","text":"<ol> <li>Review your settings.</li> <li>Click the Create repository button at the bottom of the page.</li> </ol>"},{"location":"01-Working-With-Repo/01a-Creating-Repo-Web/#additional-resources","title":"Additional Resources","text":"<ul> <li>GitHub Docs: Creating a new repository</li> <li>GitHub Docs: Managing repository settings</li> </ul>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/","title":"Creating a GitHub Repository Using <code>GitHub MCP</code>","text":"<p>\u2699\ufe0f\u2003This guide explains in detail how to create a new GitHub repository using the GitHub Copilot Model Context Protocol (MCP) extension installed in Visual Studio Code. \u2699\ufe0f\u2003The MCP extension allows you to automate repository management tasks, including repository creation, directly from the VS Code interface using natural language prompts.  </p>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#prerequisites","title":"Prerequisites","text":"<ul> <li>A GitHub account (Sign up here if you don\u2019t have one)</li> <li><code>GitHub account</code> with permission to create repositories</li> <li>A web browser (e.g., Chrome, Firefox, Safari)</li> <li><code>Visual Studio</code> Code installed on your computer</li> <li>The <code>GitHub Copilot MCP</code> extension installed in VS Code</li> </ul> <p>Task: Create a new GitHub repository</p>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#1-install-mcp-extension","title":"1. Install (MCP Extension)","text":"<ol> <li>Open Visual Studio Code.</li> <li>Go to the Extensions view (<code>Ctrl+Shift+X</code> or <code>Cmd+Shift+X</code> on Mac).</li> <li>Search for <code>GitHub Copilot MCP</code> and click Install, or go to https://code.visualstudio.com/mcp</li> <li>Verify the installation by checking if the extension appears in the list of installed extensions.</li> <li>Verify the MCP server by opening <code>GitHub Copilot chat</code>, clicking on the settings icon, and ensuring the server status is \u201cRunning\u201d.</li> </ol>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#2-authenticate-with-github","title":"2. Authenticate with GitHub","text":"<ol> <li>After installation, you may be prompted to sign in to your GitHub account.</li> <li>Follow the on-screen instructions to complete authentication.</li> </ol>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#3-open-the-copilot-chat","title":"3. Open the Copilot Chat","text":"<ul> <li>Click on the Copilot icon in the sidebar or open the Copilot Chat panel from the Command Palette (<code>Cmd+Shift+P</code> &gt; \u201cCopilot: Chat\u201d)</li> <li>Verify that the MCP is enabled. </li> </ul> <p>Verify MCP srver</p> <p> </p>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#4-create-repo-from-prompt","title":"4. Create repo from Prompt","text":"<ul> <li>In the Copilot Chat panel, enter a prompt such as:</li> </ul> <p>Prompt to create GitHub repository using GitHub Copilot MCP</p> <pre><code>Using GitHub Copilot MCP\nCreate a new GitHub repository named \"GitLab-MCP-Repo\"\nMake it public and add a README and a Python .gitignore\nAdd policy to protect the 'main' branch\n</code></pre> <ul> <li>You can customize the prompt to include details like description, visibility (public/private).license, and more. Here are some example prompts:</li> </ul>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#5-verify-vscode","title":"5. Verify (VsCode)","text":"<ul> <li>In the VsCode Github Copilot Chat panel, you should see something like:</li> </ul>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#6-verify-github","title":"6. Verify (GitHub)","text":"<ul> <li>Navigate to your GitHub account and go to the \u201cRepositories\u201d tab.</li> <li>You should see the newly created repository \u201cGitLab-MCP-Repo\u201d listed there.</li> <li>Click on the repository to view its contents and verify that the <code>README</code> and <code>.gitignore</code> files have been created.</li> </ul>"},{"location":"01-Working-With-Repo/01b-Creating-Repo-MCP/#references","title":"References","text":"<ul> <li>GitHub Copilot MCP Documentation</li> <li>GitHub Copilot in VS Code</li> </ul>"},{"location":"01-Working-With-Repo/01c-Creating-Repo-gh/","title":"Creating a GitHub Repository Using <code>gh</code>","text":"<ul> <li>This guide explains two ways to create a repository on GitHub using GitHub CLI (<code>gh</code>).</li> </ul>"},{"location":"01-Working-With-Repo/01c-Creating-Repo-gh/#prerequisites","title":"Prerequisites","text":"<ul> <li>A GitHub account (Sign up here if you don\u2019t have one)</li> <li>GitHub CLI (<code>gh</code>) installed</li> <li>Git installed (Download here)</li> <li>Authentication with <code>gh auth login</code></li> </ul> <p>Task: Create a new GitHub repository</p>"},{"location":"01-Working-With-Repo/01c-Creating-Repo-gh/#1-authenticating-with-gh","title":"1. Authenticating with (<code>gh</code>)","text":"<ul> <li>Open your terminal and authenticate if you haven\u2019t already.</li> <li> <p>Execute the following and follow the prompts to log in via browser or SSH key.       <pre><code>gh auth login\n</code></pre></p> <pre><code>### Authenticating with GitHub CLI\n## You should see prompts like these:\n\n? Where do you use GitHub? GitHub.com\n? What is your preferred protocol for Git operations on this host? SSH\n? Upload your SSH public key to your GitHub account? /Users/xxxx/.ssh/id_rsa.pub\n? Title for your SSH key: GitHub CLI\n? How would you like to authenticate GitHub CLI? Login with a web browser\n\n! First copy your one-time code: XXXX-XXXX\nPress Enter to open https://github.com/login/device in your browser... \n</code></pre> </li> </ul>"},{"location":"01-Working-With-Repo/01c-Creating-Repo-gh/#2-create-a-new-repository","title":"2. Create a new repository:","text":"<ul> <li> <p>Create a new repository using the following command:</p> <pre><code>### Creating a new repository\ngh repo                       \\\n   create my-first-repo       \\\n   --description \"My gh repo\" \\\n   --add-readme               \\\n   --public                   \\\n   --clone\n</code></pre> </li> <li> <p>You should see output like this:</p> <pre><code># You should see output like this:\n\u2713 Created repository nirgeier/my-first-repo on github.com\nhttps://github.com/nirgeier/my-first-repo\nCloning into 'my-first-repo'...\n</code></pre> </li> </ul>"},{"location":"01-Working-With-Repo/01c-Creating-Repo-gh/#3-verify-creation","title":"3. Verify creation:","text":"<ul> <li> <p>Validate the repository creation:</p> <pre><code># Verify the repository exists\ngh repo view my-first-repo --web\n</code></pre> </li> <li> <p>This should open your new repository in your browser.</p> </li> </ul>"},{"location":"01-Working-With-Repo/01c-Creating-Repo-gh/#additional-resources","title":"Additional Resources","text":"<ul> <li>GitHub CLI Docs: <code>gh repo create</code></li> </ul>"},{"location":"01-Working-With-Repo/02-Creating-Branches/","title":"Creating Branches Using GitHub GUI","text":"<ul> <li>This guide explains how to create branches in a GitHub repository using the GitHub web interface (GUI). Branching allows you to work on new features, bug fixes, or experiments in isolation from the main codebase.</li> </ul> <p>Task: Create Branches and verify</p>"},{"location":"01-Working-With-Repo/02-Creating-Branches/#1-navigate-to-your-repository","title":"1. Navigate to Your Repository","text":"<ul> <li>Go to github.com and sign in.</li> <li>Click on your repository from the list or search for it.</li> </ul>"},{"location":"01-Working-With-Repo/02-Creating-Branches/#2-open-the-branch-selector","title":"2. Open the Branch Selector","text":"<ul> <li>At the top left of your repository page, locate the branch selector dropdown (usually says <code>main</code> or <code>gh-pages</code>).</li> <li>Click the dropdown to view existing branches.</li> </ul>"},{"location":"01-Working-With-Repo/02-Creating-Branches/#3-create-a-new-branch","title":"3. Create a New Branch","text":"<ul> <li>Create 2 branches: <code>bugfix-branch</code>, <code>feature-branch</code>.</li> <li>In the branch selector, type the name of your new branch</li> <li>GitHub will show an option: <code>Create branch: &lt;your-branch-name&gt;</code> from <code>&lt;current-branch&gt;</code>.</li> <li>Click this option to create and switch to the new branch.</li> </ul>"},{"location":"01-Working-With-Repo/02-Creating-Branches/#4-verify-the-new-branches","title":"4. Verify the New Branches","text":"<ul> <li>The branch selector should now display your new branch name.</li> <li>Click on the <code>Branches</code> tab under the <code>Code</code> section to view all branches in the repository.</li> <li>Verify that your new branches (<code>bugfix-branch</code>, <code>feature-branch</code>) are listed.</li> </ul>"},{"location":"01-Working-With-Repo/02-Creating-Branches/#additional-resources","title":"Additional Resources","text":"<ul> <li>GitHub Docs: Creating and deleting branches within your repository</li> <li>Working with Branches (CLI)</li> </ul>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/","title":"Cloning a GitHub Repository","text":"<ul> <li>This guide explains how to clone a repository from GitHub to your local machine using the GitHub website and Git.</li> <li>Clone \u201cdownloading\u201d the repository to your local machine.</li> <li>This allows you to work on the project locally and push changes back to the remote repository.</li> </ul> <p>Task: Clone the repository locally</p>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/#1-find-the-repository","title":"1: Find the Repository","text":"<ol> <li>Go to https://github.com and log in.</li> <li>Navigate to the repository you want to clone.</li> </ol>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/#2-copy-the-repository-url","title":"2: Copy the Repository URL","text":"<ol> <li>Click the green Code button on the repository page.</li> <li>Choose the desired protocol:<ul> <li>HTTPS (recommended for most users)</li> <li>SSH (requires SSH key setup from setup step 1)</li> <li>GitHub CLI</li> </ul> </li> <li>Click the clipboard icon to copy the URL.</li> </ol>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/#3a-clone-the-repository-locally-cli","title":"3a: Clone the Repository Locally (CLI)","text":"<ol> <li>Open your terminal or command prompt.</li> <li>Run the following command, replacing <code>&lt;URL&gt;</code> with the copied repository URL:</li> <li>A new folder with the repository\u2019s name will be created in your current directory.    <pre><code>git clone &lt;URL&gt; [&lt;local-directory&gt;]\n</code></pre></li> </ol>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/#3b-clone-the-repository-vscode","title":"3b: Clone the Repository (VSCode)","text":"<ol> <li>Open Visual Studio Code.</li> <li>Go to the Source Control view (<code>Ctrl+Shift+G</code> or <code>Cmd+Shift+G</code> on Mac).</li> <li>Click on the \u201cClone Repository\u201d button.</li> <li>Paste the copied repository URL and choose a local directory.</li> <li>Click \u201cClone\u201d to create a local copy of the repository.</li> </ol>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/#4-start-working","title":"4: Start Working","text":"<ol> <li>Change into the repository directory:    <pre><code>cd &lt;repository-name&gt;\n</code></pre></li> <li>You can now start working with the code locally.</li> </ol>"},{"location":"01-Working-With-Repo/03-Cloning-Repo/#additional-resources","title":"Additional Resources","text":"<ul> <li>GitHub Docs: Cloning a repository</li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/","title":"Making Changes in a GitHub Repository","text":"<ul> <li>This guide explains how to make changes to files in your local copy of a GitHub repository.</li> <li>We will use new branch for our changes</li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#prerequisites","title":"Prerequisites","text":"<ul> <li>A cloned copy of the repository on your computer</li> <li>A text editor or IDE</li> <li>Git knowledge - working with branches</li> </ul> <p>Task: Create and push changes to GitHub</p>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-1-open-the-repository","title":"Step 1: Open the Repository","text":"<ul> <li>Open your terminal and navigate to the repository folder:    <pre><code>cd &lt;repository-name&gt;\n</code></pre></li> <li>Open the project in your IDE (e.g., VS Code).</li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-2-edit-files","title":"Step 2: Edit Files","text":"<ol> <li>Create a new branch for your changes, or use an existing one from previous steps:    <pre><code># Create a new branch\ngit checkout -b &lt;new-branch-name&gt;\n\n# Use existing branch\ngit checkout &lt;existing-branch-name&gt;\n</code></pre></li> <li>Use your editor to add, modify, or delete files as needed.</li> <li>Save your changes.</li> </ol>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-3-stage-changes","title":"Step 3: Stage Changes","text":"<ul> <li> <p>Stage the changes for commit:</p> <pre><code>git add .\n</code></pre> </li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-4-check-status","title":"Step 4: Check Status","text":"<ul> <li>Track changes made on your branch:</li> <li>In the terminal, run:    <pre><code>git status\n</code></pre> . In your IDE, check the Git panel to see the changes.</li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-5-commit-the-changes","title":"Step 5: Commit the Changes","text":"<ol> <li>Run the following command, replacing the message with a short description of your changes:    <pre><code>git commit -m \"Your commit message here\"\n</code></pre></li> </ol>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-6-check-commit-history","title":"Step 6: Check Commit History","text":"<ul> <li>To view your commit history, run:   <pre><code>git log --oneline\n</code></pre></li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-7-check-remote-repository","title":"Step 7: Check Remote Repository","text":"<ul> <li>In your terminal, run:    <pre><code>git remote -v\n</code></pre></li> <li>Ensure the correct remote URL is set (usually named <code>origin</code>).</li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-8-push-your-changes","title":"Step 8: Push Your Changes","text":"<ul> <li>To push your changes to the main branch, run:    <pre><code>git push origin &lt;branch-name&gt;\n</code></pre></li> <li>You will be prompted to set the upstream branch.</li> <li>Follow the on-screen instructions to complete the process.</li> </ul>"},{"location":"01-Working-With-Repo/04-Making-Changes/#step-9-verify-on-github","title":"Step 9: Verify on GitHub","text":"<ol> <li>Go to your repository page on GitHub.</li> <li>Confirm that you see your branch listed in the branch dropdown or in the main branch view.</li> </ol>"},{"location":"02-Working-With-PR/","title":"Lab 02: Working with Pull Requests","text":"<p>\u2003\u2699\ufe0f\u2003This lab covers the complete workflow of working with pull requests in GitHub</p>"},{"location":"02-Working-With-PR/#lab-contents","title":"Lab Contents","text":"<p>\u2003\ud83e\uddf0\u2003Opening PR  \u2003\u2003\ud83d\udea6 Opening PR - Web  \u2003\u2003\ud83d\udea6 Opening PR - MCP  \u2003\ud83d\udea6 Tracking Changes in a PR \u2003\ud83d\udea6 Committing Changes in a PR  \u2003\ud83d\udea6 Code Review (Web) \u2003\ud83d\udea6 Tracking Review Feedback \u2003\ud83d\udea6 PR Template Usage \u2003\ud83d\udea6 Implementing CODEOWNERS </p>"},{"location":"02-Working-With-PR/#learning-objectives","title":"Learning Objectives","text":"<p>By completing this lab, you will be able to:</p> <ul> <li> <p> Pull Request Creation      \u2003\u2003\u2705\u2003Create pull requests using GitHub Web, CLI, and MCP     \u2003\u2003\u2705\u2003Write effective PR titles and descriptions     \u2003\u2003\u2705\u2003Add appropriate reviewers and labels</p> </li> <li> <p> Code Review Process     \u2003\u2003\u2705\u2003Conduct thorough code reviews     \u2003\u2003\u2705\u2003Provide constructive feedback     \u2003\u2003\u2705\u2003Manage the approval workflow     \u2003\u2003\u2705\u2003Handle review responses and iterations</p> </li> <li> <p> Collaboration Best Practices     \u2003\u2003\u2705\u2003Follow team workflows and conventions     \u2003\u2003\u2705\u2003Use advanced GitHub features effectively     \u2003\u2003\u2705\u2003Troubleshoot common PR issues</p> </li> </ul>"},{"location":"02-Working-With-PR/01a-Creating-PR-Web/","title":"Opening Pull Requests via GitHub Web Interface","text":"<p>This guide explains how to create pull requests using the GitHub web interface. This is the most visual and user-friendly method for creating pull requests.</p>"},{"location":"02-Working-With-PR/01a-Creating-PR-Web/#prerequisites","title":"Prerequisites","text":"<ul> <li>A repository with at least one branch containing changes</li> <li>Proper authentication setup with GitHub</li> <li>Your feature branch has been pushed to the remote repository</li> </ul> <p>Task: Create pull request on GitHub</p>"},{"location":"02-Working-With-PR/01a-Creating-PR-Web/#1-navigate-to-pull-request","title":"1. Navigate to Pull Request","text":"<ol> <li>Go to your repository on GitHub.com</li> <li>Navigate to the \u201cPull requests\u201d tab</li> </ol>"},{"location":"02-Working-With-PR/01a-Creating-PR-Web/#2-create-pull-request","title":"2. Create Pull Request","text":"<ol> <li>Click the \u201cCompare &amp; pull request\u201d button (appears automatically after pushing a new branch)</li> </ol> <p>]</p> <p>OR</p> <ol> <li>Navigate manually:</li> <li>Click the \u201cPull requests\u201d tab</li> <li>Click \u201cNew pull request\u201d</li> <li>Select the base branch (usually <code>main</code> or <code>master</code>)</li> <li>Select your feature branch as the compare branch</li> <li>Click on <code>Create pull request</code></li> </ol> <p>]</p>"},{"location":"02-Working-With-PR/01a-Creating-PR-Web/#3-fill-pull-request-details","title":"3. Fill Pull Request Details","text":"<ol> <li>Title: Provide a clear, descriptive title       <pre><code>Example: Add user authentication feature\n</code></pre></li> <li> <p>Description: Include detailed information:</p> <p>For example:  </p> <ul> <li>Why the change is needed.  </li> <li>What changes were made. </li> <li>How to test the changes. </li> <li>Additional context or screenshots. </li> </ul> <pre><code>## Description\nThis PR is from GitHub Workshop.\n\n## Changes Made\n- Added change line\n- Implemented creation of PR\n- Added description to the PR\n\n## Testing\n- [x] Unit tests pass\n- [x] Manual testing completed\n- [x] No breaking changes\n\n## Screenshots\n(Add relevant screenshots if applicable)\n</code></pre> </li> <li> <p>Reviewers: Add reviewers by typing their GitHub usernames  </p> </li> <li> <p>Assignees: Assign yourself or team members.  </p> </li> <li> <p>Labels: Add appropriate labels (feature, bugfix, etc.).  </p> </li> <li> <p>Projects: Link to project boards if applicable.  </p> </li> <li> <p>Milestone: Associate with project milestones.  </p> </li> </ol>"},{"location":"02-Working-With-PR/01a-Creating-PR-Web/#4-choose-pr-type","title":"4: Choose PR Type","text":"<ol> <li> <p>Choose PR type:</p> PR Type Description Create pull request For standard PRs ready for review. Create draft pull request For work-in-progress. </li> <li> <p>Click the \u201cCreate pull request\u201d button to submit your PR.</p> </li> </ol>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/","title":"Opening Pull Requests via GitHub MCP Extension","text":"<ul> <li>This guide explains how to create and manage pull requests using the GitHub Model Context Protocol (MCP). </li> <li>MCP allows you to create PRs using natural language commands.</li> </ul>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#prerequisites","title":"Prerequisites","text":"<ul> <li>Visual Studio Code installed</li> <li>GitHub Copilot MCP extension installed and configured (Including Authentication)</li> <li>Proper authentication setup with GitHub</li> <li>Your feature branch has been pushed to the remote repository</li> </ul>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#1-install-and-setup-mcp","title":"1. Install and Setup MCP","text":"<ol> <li>Open Visual Studio Code</li> <li>Go to the Extensions view (<code>Ctrl+Shift+X</code> or <code>Cmd+Shift+X</code> on Mac)</li> <li>Search for <code>GitHub Copilot MCP</code> and click Install</li> <li>Verify the installation by checking if the extension appears in the list of installed extensions</li> </ol>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#2-authentication","title":"2. Authentication","text":"<ol> <li>After installation, you may be prompted to sign in to your <code>GitHub</code> account</li> <li>Follow the on-screen instructions to complete authentication</li> <li>Verify the MCP server by opening GitHub Copilot chat and checking the server status</li> </ol>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#3-create-pr-from-prompt","title":"3. Create PR from Prompt","text":"<ul> <li>In the Copilot Chat panel, enter a prompt such as:</li> </ul> <p>Prompt to create PR using GitHub Copilot MCP</p> <p>Using GitHub Copilot MCP    Create a new pull request from \u201cgit-labs-branch\u201d to \u201cmain\u201d    Title: \u201cAdd user authentication feature\u201d    Description: \u201cThis PR is auto generated using MCP\u201d    Add reviewers: @me    Add labels: mcp, bugfix, high-priority    Assign to: @me   </p> <ul> <li> <p>You can customize the prompt to include details like description, visibility (public/private).license, and more. Here are some example prompts:</p> <p></p> </li> </ul>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#4-updating-existing-prs-examples","title":"4. Updating Existing PRs Examples","text":"<p>Prompt to update PR using GitHub Copilot MCP</p> <pre><code>### 1. Update title\nUpdate my pull request title to \"Improved user authentication feature\"\n\n### 2. Add reviewers\nAdd reviewers alice.cooper and @backend-team to pull request #123 \n\n### 3. Update description\nUpdate PR #456 description to include:\n\"## Changes\n- Fixed validation bug\n- Added unit tests\n- Updated documentation\"\n\n### 4. Add commits\nIve made some changes to my feature branch. \nPlease update pull request #123 with these new commits.\n\n### 5. Add comment\nAdd a comment to my current pull request explaining that I've addressed the review feedback and added unit tests.\n</code></pre>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#5-viewing-pr-information","title":"5. Viewing PR Information","text":"<ul> <li>Keep working with the MCP to find out details about your pull requests</li> <li> <p>You can ask for information about your pull requests, such as:</p> <p></p> </li> </ul>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#6-ai-mcp-pr-prompts-suggestion","title":"6. AI MCP PR prompts Suggestion","text":"<p>Create PR from Templates</p> <pre><code>Create a pull request using our standard template:\n- Branch: feature/payment-integration\n- Title: Implement Stripe payment integration\n- Type: New feature\n- Include testing checklist\n- Add backend team as reviewers\n</code></pre> <p>Create PR for all my bug-fix</p> <pre><code>Create pull requests for all my feature branches that start with \"bugs\"\nUse template: \"Authentication improvements\"\nAdd security team as reviewers\n</code></pre> <p>Update PR</p> <pre><code>\"Update my PR title\"\n\"Add reviewers to PR #123\"\n\"Change PR description\"\n\"Convert draft to ready for review\"\n\"Add labels to my pull request\"\n</code></pre> <p>Automation Workflows</p> <pre><code># Automated PR creation for releases\n\"Create release PR from develop to main, title 'Release v2.1.0', add all team leads as reviewers\"\n\n# Hotfix workflows\n\"Create hotfix PR, title 'Critical security patch', add security team, mark as urgent\"\n</code></pre>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#best-practices-for-github-mcp","title":"Best Practices for GitHub MCP","text":""},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#workflow-integration","title":"Workflow Integration","text":"<ol> <li>Consistent Naming: Use consistent branch and PR naming conventions</li> <li>Template Usage: Develop standard prompts for your team</li> <li>Context Awareness: Provide relevant context in your requests</li> <li>Verification: Always review MCP suggestions before confirming</li> </ol>"},{"location":"02-Working-With-PR/01b-Creating-PR-MCP/#additional-resources","title":"Additional Resources","text":"<ul> <li>GitHub Copilot MCP Documentation</li> <li>VS Code GitHub Integration</li> <li>GitHub API Documentation</li> </ul>"},{"location":"02-Working-With-PR/02-PR-Track-Changes/","title":"Tracking Changes in a Pull Request","text":"<ul> <li>This guide explains how to review the changes of PR and update them.</li> </ul>"},{"location":"02-Working-With-PR/02-PR-Track-Changes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Visual Studio Code installed</li> <li>GitHub Copilot MCP extension installed and configured (Including Authentication)</li> <li>Proper authentication setup with GitHub</li> <li>Your feature branch has been pushed to the remote repository</li> </ul> <p>Task: Free style exploration - PR GUI</p>"},{"location":"02-Working-With-PR/02-PR-Track-Changes/#1-review-changes-on-github","title":"1. Review Changes on GitHub","text":"<ul> <li> <p>Pull request sections</p> Tab Name Description Files Changed Shows a list of all the files modified in the pull request. You can click on each file to see the specific changes. Commits Lists all the commits made to the branch. You can click on each commit to view its details. Checks Displays the status of automated checks and tests run on the pull request. Conversation Shows the discussion and comments related to the pull request. </li> </ul> <ol> <li>Open your web browser and navigate to your GitHub repository.  </li> <li>Locate the pull request associated with your branch.  </li> <li>Click on the pull request to open its details page.  </li> <li>Review the changes. </li> </ol>"},{"location":"02-Working-With-PR/02-PR-Track-Changes/#2-review-pr-gui","title":"2. Review PR GUI","text":"<p>Task: Play with the PR GUI to get familiar with it</p> <ul> <li>Play with the PR GUI to get familiar with it</li> <li>Navigate between the different tabs</li> <li>Explore the different views and options available.</li> <li>Explore the buttons</li> </ul>"},{"location":"02-Working-With-PR/02-PR-Track-Changes/#3-make-manual-changes","title":"3. Make Manual Changes","text":"<p>Task: Make Manual Changes</p> <ul> <li>Change the reviewer</li> <li>Add new comments</li> <li>Add users as mention(s) by typing <code>@</code> at the comment window</li> <li>Add labels</li> <li>Add Assignees</li> <li>Add team as reviewers</li> <li>Change the PR title</li> <li>Change the base branch</li> <li>Close and Re-Open the PR</li> </ul>"},{"location":"02-Working-With-PR/03-PR-Commit-Changes/","title":"Adding and Tracking Changes with GitHub Pull Requests","text":"<ul> <li>This guide provides a step-by-step process for adding code, reviewing commits, adding more code, reviewing updates, and adding comments in a GitHub Pull Request (PR) web site.</li> </ul> <p>Task: Add more changes and review the PR</p>"},{"location":"02-Working-With-PR/03-PR-Commit-Changes/#1-adding-code","title":"1. Adding Code","text":"<ol> <li> <p>Checkout your local branch:</p> <pre><code>git checkout branch-name\n</code></pre> </li> <li> <p>Make changes to your local repository files.</p> </li> <li> <p>Stage the changes:</p> <pre><code>git add .\n</code></pre> </li> <li> <p>Commit the changes with a descriptive message:</p> <pre><code>git commit -m \"Add initial implementation of feature\"\n</code></pre> </li> <li> <p>Push the changes to the remote branch:</p> <pre><code>git push origin branch-name\n</code></pre> </li> </ol>"},{"location":"02-Working-With-PR/03-PR-Commit-Changes/#2-reviewing-the-commits","title":"2. Reviewing the Commits","text":"<ol> <li>Navigate to your GitHub repository in a web browser.</li> <li>Open the pull request associated with your branch.</li> <li>Click on the Commits tab to view all commits made to the branch.</li> <li>Review the commit messages and details to ensure they accurately describe the changes.</li> </ol> <p>The PR should display the updated file contents and commit history.</p>"},{"location":"02-Working-With-PR/03-PR-Commit-Changes/#3-adding-more-code","title":"3. Adding More Code","text":"<ol> <li>Make additional changes to your local repository files.</li> <li>Stage the changes:</li> </ol> <pre><code>git add .\n</code></pre> <ol> <li>Commit the changes with a descriptive message:</li> </ol> <pre><code>git commit -m \"Refactor code and fix bugs\"\n</code></pre> <ol> <li>Push the new changes to the same branch:</li> </ol> <pre><code>git push origin branch-name\n</code></pre> <p>Once again, the PR should display the updated file contents and commit history.</p>"},{"location":"02-Working-With-PR/03-PR-Commit-Changes/#4-reviewing-the-updates","title":"4: Reviewing the Updates","text":"<ol> <li>Refresh the pull request page on GitHub.</li> <li>Navigate to the Files Changed tab to review the updated changes.</li> <li>Verify that the new changes align with the pull request\u2019s goals and do not introduce issues.</li> </ol>"},{"location":"02-Working-With-PR/04-PR-Code-Review/","title":"Performing a Full Code Review on GitHub Web","text":"<ul> <li>This guide provides a detailed, step-by-step breakdown of how to perform a complete code review using the GitHub web interface.   </li> <li>It covers adding reviewers and teams, making comments, and submitting a review. Screenshots are referenced for clarity.</li> </ul> <p>Task: Perform a Code Review</p>"},{"location":"02-Working-With-PR/04-PR-Code-Review/#1-add-reviewers-and-teams","title":"1. Add Reviewers and Teams","text":"<p>Notes about Teams</p> <p>Teams must be configured in your GitHub organization to appear in the list.</p> <ol> <li>Go to your repository on GitHub</li> <li>Click on the \u201cPull requests\u201d tab</li> <li>Select the pull request you want to add reviewers to</li> <li>Look for the \u201cReviewers\u201d section in the right sidebar</li> <li>Click the gear icon (\u2699\ufe0f) next to \u201cReviewers\u201d</li> <li>Search for and select reviewers by:<ul> <li>Username</li> <li>Full name</li> <li>Team name (if you have access to teams) (e.g., <code>@organization/team-name</code>)</li> </ul> </li> <li>Click on the reviewer name to add them</li> </ol>"},{"location":"02-Working-With-PR/04-PR-Code-Review/#2-adding-comments","title":"2. Adding Comments","text":"<ol> <li>In the Files Changed tab, scroll through the list of changed files to locate the specific lines of code you want to comment on.</li> <li>Hover your mouse over the line number where you want to add feedback. </li> <li>A blue + icon will appear to the left of the line.</li> <li>Click the + icon to open the inline comment editor for that line or code block. </li> </ol> <p>Tip</p> <ul> <li>In the comment box, write your feedback, question, or suggestion.  You can use Markdown formatting, reference other issues or pull requests with <code>#</code>, and mention users or teams with <code>@</code>.</li> </ul> <ul> <li>You can also select multiple lines to comment on a code range.</li> </ul>"},{"location":"02-Working-With-PR/04-PR-Code-Review/#3-submit-comments","title":"3. Submit Comments","text":"<ol> <li>Choose how to submit your comment:<ul> <li>Click Add single comment to immediately post your feedback.</li> <li>Click Start a review if you want to leave multiple comments before submitting them all together as a review. This is useful for providing comprehensive feedback in one go.</li> </ul> </li> <li>If you started a review, continue adding comments throughout the code as needed. All comments will be collected in your pending review.</li> </ol>"},{"location":"02-Working-With-PR/04-PR-Code-Review/#4-review-changes","title":"4. Review Changes","text":"<ol> <li> <p>When finished, click the Review changes button at the top right of the Files Changed tab.    </p> Option Description Comment Submit your feedback without approving or requesting changes. Approve Indicate the code is ready to merge. Request changes Block merging until issues are addressed. (Summary comment) Optionally, add a summary comment for the overall review. </li> <li> <p>Click Submit review to finalize and send your comments to the pull request author and other reviewers.</p> </li> </ol> <p>PR Notes</p> <p>You can also add comments to entire files or outdated diffs by clicking the appropriate options in the Files Changed tab. All comments and review activity will appear in the Conversation tab for full visibility.</p> <p>Whenever you have an open PR on a specific branch, make sure to push your changes to the same branch as the pull request.   The pull request will automatically update with your new commits.</p>"},{"location":"02-Working-With-PR/05-PR-Track-Review/","title":"Track Review Status and Respond","text":"<ul> <li>This lab explains how to track a pull request\u2019s review status, respond to feedback, handle CI checks, and prepare a PR for merge.</li> </ul> <p>Task: Track Review Status and Respond (Comments)</p>"},{"location":"02-Working-With-PR/05-PR-Track-Review/#1-where-to-check-status","title":"1. Where to Check Status","text":"<p>Use these areas on the PR page to see review progress and merge readiness.</p> Area What you\u2019ll see Conversation tab Full timeline of activity (comments, reviews, commits, CI events) show open/resolved state and who resolved them. Reviewers (sidebar) Requested reviewers/teams, who approved, who requested changes, and \u201cRe-request review\u201d actions. Checks tab CI status, required and optional checks, and detailed logs for failures. Merge box (bottom) Mergeability summary: approvals required, checks passing/failing, branch conflicts, and protection rules. Files changed Open/Outdated/Resolved threads inline, \u201cViewed\u201d checkboxes, file filter, diff settings."},{"location":"02-Working-With-PR/05-PR-Track-Review/#2-respond-to-review-feedback","title":"2. Respond to Review Feedback","text":"<ol> <li>Open the Conversation tab and review all open threads that need action.</li> <li>Go to Files changed and expand files with comments.</li> <li>Play around with the review and reply/comment on the feedback.<ul> <li>Click Reply, answer/comment on the feedback.</li> <li>Accept a suggested change if provided.</li> <li>When required, click Resolve. </li> <li>Reopen Resolved threads if needed.</li> </ul> </li> </ol> <p>Tip</p> <p>Use diff settings to speed up review:   </p> <ul> <li>Hide whitespace changes (A very useful setting for ignoring formatting changes)   </li> <li>Expand context (Show more lines)</li> <li>Toggle rich diff for binaries like images/Markdown</li> <li>Mark files as Viewed to track progress (Useful when you are working on multiple files)</li> </ul>"},{"location":"02-Working-With-PR/05-PR-Track-Review/#3-update-the-pr-with-fixes","title":"3. Update the PR with Fixes","text":"<ol> <li>Make your tweaks on the same branch (e.g., <code>git-labs-branch</code>).</li> <li>Commit and push, the PR updates itself and you\u2019ll see a refresh banner.</li> <li>If you see a <code>Refresh</code> button, click it to update the PR view.</li> </ol>"},{"location":"02-Working-With-PR/06-PR-Template/","title":"Creating and Using Pull Request Templates","text":"<ul> <li>This lab shows how to create and use PR templates to standardize pull request descriptions and ensure consistent information across your team.</li> </ul> <p>Task: Create and Use a PR Template</p>"},{"location":"02-Working-With-PR/06-PR-Template/#1-understanding-pr-templates","title":"1. Understanding PR Templates","text":"<ul> <li>PR templates automatically populate the description field when someone creates a new pull request. </li> <li>They help us with the following:<ul> <li>Maintain consistent information across all PRs</li> <li>Ensure required details aren\u2019t missed</li> <li>Facilitate faster code reviews with better context</li> <li>Provide clear linking between PRs and issues</li> </ul> </li> </ul>"},{"location":"02-Working-With-PR/06-PR-Template/#2-create-the-template-file","title":"2. Create the Template File","text":"<ol> <li>Create a new branch (So you can work on the template without affecting the main branch).</li> <li>In your repository root, create a <code>.github</code> folder if it doesn\u2019t exist.</li> <li>Inside <code>.github</code>, create a file named <code>pull_request_template.md</code>.</li> <li>Add your template content using markdown syntax.</li> </ol> <p>The file structure should look like:</p> <pre><code>your-repo/\n\u251c\u2500\u2500 .github/\n\u2502   \u2514\u2500\u2500 pull_request_template.md\n</code></pre>"},{"location":"02-Working-With-PR/06-PR-Template/#3-template-content","title":"3. Template Content","text":"<p>Here\u2019s a comprehensive template that covers most use cases:</p> <pre><code>## Description\n&lt;!-- Briefly describe the changes introduced by this PR --&gt;\n\n## Related Issue\n&lt;!-- Link the issue this PR closes or relates to , if any--&gt;\nFixes #&lt;issue_number&gt;\n\n## Type of Change\n&lt;!-- Leave only the relevant one and delete the others --&gt;\n- [ ] Bug fix \ud83d\udc1b\n- [ ] New feature \u2728\n- [ ] Documentation update \ud83d\udcda\n- [ ] Enhancement \ud83d\udee0\ufe0f\n- [ ] Refactoring \u267b\ufe0f\n- [ ] Hotfix \ud83d\udd25\n- [ ] Other (please describe):\n\n## Checklist\n- [ ] I have tested my changes locally\n- [ ] I have updated documentation if needed\n- [ ] My code follows the project's style guidelines\n- [ ] I have linked the related issue\n- [ ] I need to go home \ud83d\ude0a\n\n## Screenshots (if applicable)\n&lt;!-- Add before/after screenshots for UI changes --&gt;\n\n## Additional Notes\n&lt;!-- Anything else reviewers should know --&gt;\n</code></pre>"},{"location":"02-Working-With-PR/06-PR-Template/#4-create-the-template-file-in-your-repo","title":"4. Create the Template File in Your Repo","text":"<p>Creating the Template File</p> <p>Make sure you create the template file in the correct location.(<code>.github</code> folder) or else it will not work.</p> <ol> <li>Switch to the <code>main</code> branch.</li> <li>Switch to your repository root folder.</li> <li>Create new file with the specific name <code>.github/pull_request_template.md</code></li> <li>Copy the template content from above into the file.</li> <li>Commit and push the changes</li> </ol>"},{"location":"02-Working-With-PR/06-PR-Template/#5-using-the-template","title":"5. Using the Template","text":"<ol> <li>Make changes, add, commit &amp; push your code.</li> <li>Create a new pull request as usual.</li> <li>The template will automatically appear in the description field.</li> </ol> <p>Task: Create and Use Custom PR Template</p>"},{"location":"02-Working-With-PR/06-PR-Template/#6-multiple-templates","title":"6. Multiple Templates","text":"<p>You can create different templates for different types of PRs:</p> <pre><code>.github/\n\u251c\u2500\u2500 PULL_REQUEST_TEMPLATE/\n\u2502   \u251c\u2500\u2500 bug_fix.md\n\u2502   \u251c\u2500\u2500 feature.md\n\u2502   \u2514\u2500\u2500 documentation.md\n\u2514\u2500\u2500 pull_request_template.md (default)\n</code></pre> <ol> <li>Create a new file for each template in the <code>.github/PULL_REQUEST_TEMPLATE/</code> directory.</li> <li>Write your template content using markdown syntax.</li> <li>You can set a template name and description:   <pre><code>name: Bug Fix\ndescription: Use this template for bug fixes\n</code></pre></li> <li> <p>Add, commit, and push your changes.</p> <p></p> </li> </ol> <p>ISSUE_TEMPLATE</p> <ul> <li>GitHub support Issue Template as well.</li> <li>Same concept but in different folder.</li> <li><code>.github/ISSUE_TEMPLATE/</code></li> </ul>"},{"location":"02-Working-With-PR/06-PR-Template/#7-using-pr-template","title":"7. Using PR template","text":"<p>Default Template</p> <p>In order to use the default PR template, simply create a new pull request as you normally would.</p> <p>Custom Template</p> <p>In order to use a custom PR template, you can specify the template in the URL when creating the PR.</p> <p><pre><code>###\n### https://github.com/owner/repo/compare/&lt;branch to&gt;...&lt;branch_from&gt;?template=&lt;template&gt;\n\nhttps://github.com/owner/repo/compare/main...feature?template=feature.md\n</code></pre> Using query parameters to create a pull request</p>"},{"location":"02-Working-With-PR/06-PR-Template/#8-testing-your-template","title":"8. Testing Your Template","text":"<ol> <li>Create a test branch:</li> </ol> <pre><code>git checkout -b test-pr-template\ngit push origin test-pr-template\n</code></pre> <ol> <li>Open a new PR from this branch to see the template in action.</li> <li>Verify all sections appear correctly and make adjustments if needed.</li> </ol>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/","title":"Implementing CODEOWNERS for Pull Request Automation","text":"<p>\ud83e\udde9 This hands-on lab walks you through adding a <code>CODEOWNERS</code> file to automatically assign reviewers and enforce ownership rules on pull requests.</p>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#1-using-codeowners","title":"1. Using CODEOWNERS","text":"<ul> <li><code>CODEOWNERS</code> is a file that allows you to define individuals or teams responsible for specific parts of your codebase. </li> <li>When changes are made to those areas, the designated code owners are automatically requested for review.</li> <li>This helps ensure that the right people are reviewing changes to critical parts of the code.</li> <li><code>CODEOWNERS</code> can also be used to enforce review policies, such as requiring approval from code owners before merging.</li> </ul> <p>How CODEOWNERS Works</p> <ul> <li>Automatically assigns reviewers based on file changes</li> <li>Ensures domain experts review relevant code</li> <li>Can be combined with branch protection rules</li> <li>Supports teams and individual users</li> </ul> <ul> <li> <p>Create <code>.github/CODEOWNERS</code> in your repository:</p> <pre><code># Global owners\n* @username @team-name\n\n# Frontend code\n/src/components/ @frontend-team\n/src/styles/ @design-team\n\n# Backend code\n/api/ @backend-team\n/database/ @backend-team @database-admin\n\n# Infrastructure\n/.github/ @devops-team\n/docker/ @devops-team\n</code></pre> </li> </ul>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#2-codeowners-files-location","title":"2. CODEOWNERS - Files location","text":"<p>GitHub search for the first matching file in following order:</p> <ol> <li><code>.github/CODEOWNERS</code></li> <li><code>CODEOWNERS</code> in the repository root</li> <li><code>docs/CODEOWNERS</code></li> </ol> <p>Tip</p> <p>Recommended: Use <code>.github/CODEOWNERS</code> for consistency with other meta files (workflows, templates).</p>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#3-codeowners-pattern","title":"3. CODEOWNERS - Pattern","text":"Pattern Type Example Matches Single file <code>README.md</code> Exact file Directory (recursive) <code>src/</code> Everything under <code>src/</code> Specific extension <code>*.md</code> All Markdown files Nested path <code>app/api/</code> Files in that folder &amp; subfolders Escaping <code>#</code> <code>\\#file.txt</code> File literally named <code>#file.txt</code> Comment line <code># owners of infra</code> Ignored Last match wins Later entries override Use ordering intentionally"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#4-codeowners-example","title":"4. CODEOWNERS - Example","text":"<ul> <li> <p>Create directory (if needed):</p> <pre><code>mkdir -p .github\n</code></pre> </li> <li> <p>Add file <code>.github/CODEOWNERS</code>:</p> <pre><code># Global ownership (fallback)\n* nirgeier@gmail.com\n\n# Documentation\n/docs/ @your-org/docs-writers\n*.md   @your-org/docs-writers\n\n# Frontend code\n/src/components/ @your-org/frontend-team\n/src/styles/ @your-org/design-team\n\n###\n###... Any other paths or file types\n###\n</code></pre> </li> <li> <p>Add to git &amp; push:</p> <pre><code>git add .github/CODEOWNERS\ngit commit -m \"Add initial CODEOWNERS file\"\ngit push origin main\n</code></pre> </li> </ul>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#5-codeowners-enable","title":"5. CODEOWNERS - Enable","text":"<p>If you have not enabled branch protection yet:</p> <ol> <li>Go to: Repository \u2192 Settings \u2192 Rules \u2192 Rulesets (or Branches &gt; Branch protection)</li> <li>Create / Edit your ruleset targeting <code>main</code></li> <li>Enable the following<ul> <li>Require a pull request before merging</li> <li>Require approvals: set to <code>1</code> (or more)</li> <li>Require review from Code Owners </li> <li>Dismiss stale approvals (recommended)</li> <li>Require conversation resolution</li> </ul> </li> <li>Save / Activate the ruleset</li> </ol> <p></p>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#6-codeowners-verify-test","title":"6. CODEOWNERS - Verify (Test)","text":"<ul> <li>Open a pull request</li> <li>In the PR sidebar you should see:</li> <li>Reviewers automatically populated with teams/users from matching patterns.</li> </ul>"},{"location":"02-Working-With-PR/07-PR-CODEOWNERS/#7-codeowners-checklist","title":"7. CODEOWNERS - Checklist","text":"<p>Use this checklist to validate success:</p> <ul> <li> CODEOWNERS exists at <code>.github/CODEOWNERS</code></li> <li> Global <code>*</code> rule defined</li> <li> At least one team + one individual user referenced (optional)</li> <li> Branch protection requires Code Owner review</li> <li> Test PR auto-assigned reviewers</li> <li> Specific path override tested</li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/","title":"Advanced Pull Request (PR) Lab","text":"<p>\u2699\ufe0f\u2003This lab provides a detailed, hands-on workflow for creating, reviewing, and merging pull requests (PRs) in GitHub, following best practices for collaboration.</p> <p>Experimental</p> <p>This lab is designed to help you understand and practice the advanced features of pull requests in GitHub.</p>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#1-cloning-the-repository","title":"1. Cloning the Repository","text":"<ul> <li> <p>Clone the repository you want to contribute to:</p> <pre><code># Clone the repository\ngit clone https://github.com/username/repository-name.git\n\n# Navigate into the repository\ncd repository-name\n</code></pre> </li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#2-creating-a-new-branch","title":"2. Creating a New Branch","text":"<ul> <li> <p>Create and switch to a new branch for your feature or fix:</p> <pre><code># Create a new branch\ngit checkout -b pr-lab-task01\n</code></pre> </li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#3-making-your-changes","title":"3. Making Your Changes","text":"<ul> <li> <p>Edit files, add features, fix bugs, or update documentation as needed in your new branch.</p> <pre><code># Make your changes\necho \"Hello, World!\" &gt; hello.txt\n# Stage your changes\ngit add hello.txt\n# Commit your changes\ngit commit -m \"PR-Lab-01: Add hello.txt with greeting\"\n</code></pre> </li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#4-pushing-your-branch-to-github","title":"4. Pushing Your Branch to GitHub","text":"<ul> <li> <p>Push your branch to GitHub (first push requires <code>--set-upstream</code>):</p> <pre><code>git push --set-upstream origin pr-lab-task01\n</code></pre> </li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#5-creating-the-pull-request","title":"5. Creating the Pull Request","text":"<ol> <li>Go to your repository on GitHub. </li> <li>You should see a <code>Compare &amp; pull request</code> banner. </li> <li>Click it, or go to the \u201cPull requests\u201d tab and click <code>New pull request</code>.</li> <li>Fill out the PR form (Not all fields are required, but the more information you provide, the better):<ul> <li>Base branch: The branch you want to merge into (usually <code>main</code>)</li> <li>Compare branch: Your feature branch</li> <li>Title: Clear, concise summary of your changes</li> <li>Description: Explain what and why, reference issues (e.g., <code>Closes #123</code>), add screenshots or context as needed</li> <li>Reviewers/Assignees/Labels: Add as appropriate</li> <li>Linked Issues: Link any related issues or PRs</li> </ul> </li> <li>Review your changes and submit the PR.</li> </ol>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#6-reviewing-and-merging","title":"6. Reviewing and Merging","text":"<ul> <li>If you can review your code, leave comments, and some request changes</li> <li>Leave comments on specific lines of code for clarity</li> <li>Push new commits to your branch (they appear in the PR automatically)</li> <li>Approve the PR and merge it</li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#8-cleaning-up","title":"8. Cleaning Up","text":"<p>After merging:</p> <ul> <li>Delete the remote branch on GitHub (GitHub will prompt you)</li> <li>Delete your local branch:</li> </ul> <pre><code>git branch -d new-feature-name\n</code></pre>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#best-practices-tips","title":"Best Practices &amp; Tips","text":"<ul> <li>Always branch from the latest <code>main</code>/<code>master</code></li> <li>Write clear commit messages and PR descriptions</li> <li>Reference related issues in your PR</li> <li>Respond promptly to review feedback</li> <li>Keep PRs focused and small for easier review</li> </ul>"},{"location":"02-Working-With-PR/99-Advanced-PR-Lab/#resources","title":"Resources","text":"<ul> <li>GitHub Docs: About Pull Requests</li> <li>GitHub Flow</li> </ul>"},{"location":"03-Configuration/","title":"Lab 03: Configuration","text":"<p>\u2003\u2699\ufe0f\u2003This lab guides you through core repository configuration that scales collaboration and governance. \u2003\u2699\ufe0f\u2003You will set up template repositories, branch / ruleset policies, security &amp; automation (Code / Secret / Dependency scanning), and collaboration standards.</p>"},{"location":"03-Configuration/#lab-contents","title":"Lab Contents","text":"<p> Template Repository Rulesets Security Scanning </p>"},{"location":"03-Configuration/#summary","title":"Summary","text":"<p>By completing this lab you will be able to:</p> <p>\u2003\u2705\u2003Publish and consume repository templates for fast, consistent project starts \u2003\u2705\u2003Design and enforce branch &amp; ruleset policies tailored to branch purpose \u2003\u2705\u2003Automate security posture (CodeQL, Secrets, Dependency Review) with gated merges \u2003\u2705\u2003Integrate scanning outputs into PR workflows &amp; branch protection \u2003\u2705\u2003Lay groundwork for scalable collaboration (governance &amp; ownership)  </p>"},{"location":"03-Configuration/01-Template-Repository/","title":"Creating a Template Repository","text":"<ul> <li>This lab shows how to create and use GitHub template repositories for new repositories.</li> <li>This lab will not cover all the possible configurations and customizations for template repositories.</li> </ul>"},{"location":"03-Configuration/01-Template-Repository/#1-template-repositories-why","title":"1. Template Repositories. Why?","text":"<p>Template Benefits</p> <ul> <li>Template repositories are special GitHub repositories that serve as blueprints (bootstraps) for creating new repositories. </li> <li> <p>Some of the templates include:</p> <ul> <li>Consistent project structure across teams and organizations</li> <li>Pre-configured settings like CI/CD pipelines, linting rules, and development tools</li> <li>Boilerplate code and documentation templates</li> <li>Faster project initialization without manual setup</li> <li>Best practices and guidelines for project setup</li> <li>Customizable workflows to fit specific project needs</li> <li>Integration with third-party tools and services</li> <li>Automated setup scripts for quick environment configuration</li> <li>Sample data and fixtures to help kickstart development</li> <li>Documentation and tutorials for using the template effectively</li> <li>Issue and pull request templates for consistent contributions</li> <li>Custom scripts for common tasks (e.g., setup, testing)</li> <li>Environment configuration files (e.g., <code>.env.example</code>)</li> </ul> <p>When someone creates a new repository from a template, they get a clean copy with all the template\u2019s files but none of its Git history.</p> </li> </ul>"},{"location":"03-Configuration/01-Template-Repository/#2-prepare-your-template-repository","title":"2. Prepare Your Template Repository","text":"<p>Lets create a new repository on GitHub to serve as our template.</p> <ol> <li>Go to GitHub.com and sign in to your account.</li> <li>Click the \u201d+\u201d icon in the top-right corner and select \u201cNew repository\u201d.</li> <li>Choose a descriptive name like <code>my-project-template</code> or <code>react-app-template</code>.</li> <li>Add a clear description explaining what the template is for.</li> <li>Make the repository Public (templates work best when accessible).</li> <li>Initialize with a README file.</li> <li>Click \u201cCreate repository\u201d.</li> </ol> <p>New Repository</p> <p></p> <p>Template Repository</p> <p></p>"},{"location":"03-Configuration/01-Template-Repository/#3-create-repository-template-files","title":"3. Create Repository Template Files","text":"<ul> <li> <p>A basic template project should look like:</p> <pre><code>root /                                         # Repository root\n\u251c\u2500\u2500 .github /                                  # GitHub-specific configuration\n\u2502   \u251c\u2500\u2500 workflows /                            # GitHub Actions workflow definitions\n\u2502   \u2502   \u2514\u2500\u2500 ci.yml                             # CI pipeline (build/test/lint)\n\u2502   \u251c\u2500\u2500 ISSUE_TEMPLATE/                        # Issue form/templates\n\u2502   \u2502   \u251c\u2500\u2500 bug_report.md                      # Bug report issue template\n\u2502   \u2502   \u2514\u2500\u2500 feature_request.md                 # Feature request issue template\n\u2502   \u2514\u2500\u2500 pull_request_template.md               # PR description guidance\n\u251c\u2500\u2500 docs/                                      # Project documentation\n\u2502   \u251c\u2500\u2500 CONTRIBUTING.md                        # How to contribute (standards, process)\n\u2502   \u2514\u2500\u2500 SETUP.md                               # Local environment / install steps\n\u251c\u2500\u2500 src/                                       # Application/source code\n\u2502   \u2514\u2500\u2500 (your project files)                   # Replace with actual modules/packages\n\u251c\u2500\u2500 tests/                                     # Test suite root\n\u2502   \u2514\u2500\u2500 (test files)                           # Unit/integration/e2e tests\n\u251c\u2500\u2500 .gitignore                                 # Ignore rules for Git\n\u251c\u2500\u2500 LICENSE                                    # Project license (e.g., MIT, Apache-2.0)\n\u251c\u2500\u2500 README.md                                  # Overview, usage, badges, quick start\n\u2514\u2500\u2500 package.json (or equivalent)               # Dependency &amp; script manifest (npm, etc.)\n</code></pre> </li> <li> <p>Create any content you want to include in the template repository</p> </li> <li>Add and commit your changes</li> </ul>"},{"location":"03-Configuration/01-Template-Repository/#4-enable-template-mode","title":"4. Enable Template Mode","text":"<p>Note</p> <p>In order to use this repository as a template, you need to enable template mode.</p> <p></p> <ol> <li>Navigate to your repository on GitHub.</li> <li>Click the \u201cSettings\u201d tab (top navigation bar).</li> <li>Scroll down to the \u201cGeneral\u201d section.</li> <li>Find the \u201cTemplate repository\u201d checkbox.</li> <li>Check the box to \u201cTemplate repository\u201d.</li> <li>Click \u201cSave\u201d to confirm the changes.</li> </ol>"},{"location":"03-Configuration/01-Template-Repository/#5-use-the-template-repository","title":"5. Use the Template Repository","text":"<ol> <li>Log into GitHub.</li> <li>Navigate to your template repository.</li> <li>Click the green \u201cUse this template\u201d button (appears instead of \u201cClone\u201d).</li> <li>Select \u201cCreate a new repository\u201d.</li> <li>Fill in the new repository details:<ul> <li>Repository name: Choose a descriptive name</li> <li>Description: Describe the specific project</li> <li>Visibility: Public or Private as needed</li> </ul> </li> <li>Choose whether to \u201cInclude all branches\u201d (usually keep unchecked).</li> <li>Click \u201cCreate repository from template\u201d.</li> <li>Your new repository will be created with all files and settings from the template.</li> </ol>"},{"location":"03-Configuration/02-RulesSet/","title":"GitHub Rulesets","text":"<ul> <li>Rulesets are the modern way to enforce protections on branches across a repository (or organization). </li> <li>Use a branch ruleset to standardize requirements like PR reviews, status checks, commit signing, and more.</li> </ul>"},{"location":"03-Configuration/02-RulesSet/#understanding-ruleset-branch-protection","title":"Understanding Ruleset / Branch Protection","text":"<p>Branch protection rules help maintain code quality by:</p> <ul> <li>Preventing direct pushes to important branches like <code>main</code> or <code>develop</code></li> <li>Requiring pull request reviews before merging code</li> <li>Enforcing status checks from CI/CD pipelines</li> <li>Restricting who can push to protected branches</li> <li>Maintaining a clean commit history with merge strategies</li> <li>Ensuring code review processes by forcing pull request reviews</li> <li>Enabling automated testing to catch issues early</li> <li>Maintaining a clean commit history with merge strategies</li> <li>Enforcing coding standards through automated checks</li> <li>Preventing accidental deletions of important branches</li> </ul>"},{"location":"03-Configuration/02-RulesSet/#1-create-ruleset","title":"1. Create Ruleset","text":"<ol> <li>Open the repository on GitHub and go to Settings</li> <li>In the sidebar, select Rules \u2192 Rulesets</li> <li>Click New ruleset and choose New Branch Ruleset as the target</li> <li>Give the ruleset a meaningful name (for example, <code>Branch Protections - main</code>)</li> <li>Set Enforcement status \u2192 Active / Disabled </li> <li>Set Target branches \u2192 Add target (which branches the rules apply to):</li> <li>Configure Bypass list (optional):<ul> <li>Add specific users/teams that may bypass, and (if required)</li> </ul> </li> </ol> <p>Danger</p> <p>Bypass rules should be used sparingly and only for trusted users or teams. <code>Atera</code> Does have bypass rules </p> <p></p>"},{"location":"03-Configuration/02-RulesSet/#2-approvals","title":"2. Approvals","text":"<ul> <li>Set the Require a pull request before merging \u2192 Required Approvals </li> </ul>"},{"location":"03-Configuration/02-RulesSet/#3-merge-methods","title":"3. Merge Methods","text":"<ul> <li> <p>Set the Allowed merge methods </p> </li> </ul>"},{"location":"03-Configuration/02-RulesSet/#squash","title":"Squash","text":"<ul> <li>Recommended for most teams</li> <li>Combines all commits into a single commit</li> <li>Keeps main branch history clean</li> <li>Easy to revert changes</li> <li>Provides a clear commit history</li> <li>Allows for better collaboration and code review</li> <li>Simplifies the process of reverting changes</li> </ul>"},{"location":"03-Configuration/02-RulesSet/#rebase","title":"Rebase","text":"<ul> <li>Replays commits without creating merge commits</li> <li>Creates linear history</li> <li>Good for small, clean changes</li> <li>Allows for easier bisecting of changes</li> <li>Supports interactive rebasing</li> <li>Requires careful management of commit history</li> <li>Not recommended for large feature branches</li> </ul>"},{"location":"03-Configuration/02-RulesSet/#merge-committing","title":"Merge committing","text":"<ul> <li>Creates merge commits that preserve branch history</li> <li>Good for feature branch workflows</li> <li>Allows for more complex merge scenarios</li> <li>Requires careful management of merge conflicts</li> <li>Not recommended for small changes</li> </ul>"},{"location":"03-Configuration/02-RulesSet/#merge-strategy-recommendations","title":"Merge Strategy Recommendations","text":"Workflow Type Recommended Strategy Benefits Feature branches Squash merge Clean main branch history Hotfixes Rebase merge Fast-forward integration Release branches Merge commit Preserve branch context Small changes Squash merge Reduce commit noise"},{"location":"03-Configuration/02-RulesSet/#4-status-checks","title":"4. Status Checks","text":"<ul> <li>Set the Require status checks to pass \u2192 Require status checks to pass before merging </li> <li>Add the required checks </li> </ul> <p>Require status checks to pass before merging</p> <ul> <li>This ensures that all required checks pass before merging a pull request.</li> <li>It helps maintain code quality and prevents broken code from being merged.</li> <li>You can select specific checks like:<ul> <li><code>ci/build</code></li> <li><code>ci/test</code></li> <li><code>security/code-scanning</code></li> <li><code>quality/lint</code></li> <li><code>Atera/specific_task</code> </li> </ul> </li> </ul>"},{"location":"03-Configuration/02-RulesSet/#5-branch-restrictions","title":"5. Branch Restrictions","text":"<ul> <li>Those are several restrictions you can apply to branches</li> <li>Review the rules screen and you can see all the different configured restrictions</li> </ul>"},{"location":"03-Configuration/02-RulesSet/#task-create-rules-for-development-branch","title":"Task: Create rules for Development Branch","text":"<p> Pattern: <code>develop</code> or <code>dev</code> Required reviewers: 1  Status checks: CI tests only Allow force pushes: No  </p>"},{"location":"03-Configuration/02-RulesSet/#task-create-rules-for-release-branches","title":"Task: Create rules for Release Branches","text":"<p> Pattern: <code>release/*</code> Required reviewers: 2 Status checks: Full test suite Restrict pushes: Release managers only  </p>"},{"location":"03-Configuration/02-RulesSet/#task-create-rules-for-feature-branches","title":"Task: Create rules for Feature Branches","text":"<p> Pattern: <code>feature/*</code> Required reviewers: 1 Status checks: Basic CI Allow force pushes: Yes (for development)  </p>"},{"location":"03-Configuration/02-RulesSet/#6-copilot-code-reviews","title":"6. Copilot Code Reviews","text":"<ul> <li>Set the Require a pull request before merging \u2192 Automatically request Copilot code review</li> </ul>"},{"location":"03-Configuration/03-CodeScan/","title":"Code Scann","text":"<ul> <li>This lab walks through configuring GitHub\u2019s core application security features.</li> <li>You will enable and tune: Code Scanning (CodeQL), Secret Scanning (incl. Push Protection), and Dependency Review.</li> <li>Includes setup, workflow authoring, alert triage, automation, and integration with branch protection.</li> </ul>"},{"location":"03-Configuration/03-CodeScan/#1-why-these-security-features-matter","title":"1. Why These Security Features Matter","text":"<p>Security features help you shift-left by:</p> <ul> <li>Automatically finding vulnerabilities (CodeQL semantic analysis)</li> <li>Preventing leaked credentials before they land in <code>main</code> (Secret Scanning + Push Protection)</li> <li>Catching risky dependency changes during code review (Dependency Review)</li> <li>Reducing mean-time-to-detect (MTTD) with continuous scanning</li> <li>Standardizing security gates via required status checks</li> <li>Enabling measurable SLAs for remediation (alerts, severity, timelines)</li> <li>Supporting audit &amp; compliance with immutable alert history</li> </ul>"},{"location":"03-Configuration/03-CodeScan/#2-prerequisites","title":"2. Prerequisites","text":"Area Requirement Permissions Repository Admin (to enable security &amp; analysis) Repo Visibility All features free for public repos. Private repos need GHAS for CodeQL &amp; Secret Scanning. Branch Strategy Protected default branch (e.g. <code>main</code>) Code Languages CodeQL supports Java, Kotlin, C/C++, Go, C#, Python, Ruby, JS/TS, Swift, etc. CI CodeQL workflows consume Actions minutes <p>Note</p> <p>If a language is not auto-detected specify explicitly (<code>languages: ['java','python']</code>).</p>"},{"location":"03-Configuration/03-CodeScan/#3-enable-security-analysis-features","title":"3. Enable Security &amp; Analysis Features","text":"<ol> <li>Navigate to the repository on GitHub.</li> <li>Settings \u2192 Advanced Security \u2192 Code scanning.</li> <li>Enable what ever you wish based upon your needs:<ul> <li> Dependency graph</li> <li> Dependabot alerts</li> <li> Dependabot security updates (optional)</li> <li> Code scanning (Default or Advanced)</li> <li> Secret scanning</li> <li> Secret scanning: Push protection</li> </ul> </li> <li>Wait for activation banners.</li> </ol> <p>Note</p> <p>Dependency Graph must be on for Dependency Review context.</p> <p></p>"},{"location":"03-Configuration/03-CodeScan/#4-code-scanning-codeql","title":"4. Code Scanning (CodeQL)","text":""},{"location":"03-Configuration/03-CodeScan/#41-modes","title":"4.1 Modes","text":"Mode Use Case Effort Default Fast enable, standard query packs Very Low Advanced (workflow) Custom build, multi-language, custom packs Medium SARIF Upload Integrate external SAST tools Variable"},{"location":"03-Configuration/03-CodeScan/#42-quick-start-default","title":"4.2 Quick Start (Default)","text":"<ol> <li>Security tab \u2192 Code scanning alerts.</li> <li>Set up code scanning \u2192 Default \u2192 Enable CodeQL.</li> <li>Initial analysis runs automatically.</li> <li>Review alerts when finished.</li> </ol>"},{"location":"03-Configuration/03-CodeScan/#43-advanced-workflow","title":"4.3 Advanced Workflow","text":"<p>Create <code>.github/workflows/codeql.yml</code>:</p> <pre><code>name: CodeQL\n\non:\n    push:\n        branches: [\"main\"]\n    pull_request:\n        branches: [\"main\"]\n    schedule:\n        - cron: '0 3 * * 1'\n\njobs:\n    analyze:\n        runs-on: ubuntu-latest\n        permissions:\n            actions: read\n            contents: read\n            security-events: write\n        strategy:\n            fail-fast: false\n            matrix:\n                language: [javascript, python]\n        steps:\n            - uses: actions/checkout@v4\n            - name: Initialize CodeQL\n                uses: github/codeql-action/init@v3\n                with:\n                    languages: ${{ matrix.language }}\n                    # packs: codeql/javascript-queries@latest,codeql/python-queries@latest\n                    # config-file: ./.github/codeql/codeql-config.yml\n            - name: Autobuild\n                uses: github/codeql-action/autobuild@v3\n            - name: Analyze\n                uses: github/codeql-action/analyze@v3\n                with:\n                    category: \"/language:${{ matrix.language }}\"\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#44-custom-queries","title":"4.4 Custom Queries","text":"<p>Create <code>.github/codeql/codeql-config.yml</code>:</p> <p><pre><code>name: Custom CodeQL Config\nqueries:\n    - uses: security-extended\n    - uses: security-and-quality\n</code></pre> Reference with <code>config-file</code> in init step.</p> <p>Tip</p> <pre><code>Add `security-extended` after validating baseline noise.\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#45-manual-build-example","title":"4.5 Manual Build Example","text":"<pre><code>            - name: Build (Maven)\n                run: mvn -B -DskipTests package\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#46-triage-alerts","title":"4.6 Triage Alerts","text":"<ol> <li>Security \u2192 Code scanning alerts.</li> <li>Filter by severity / language.</li> <li>Open alert \u2192 inspect data flow.</li> <li>Fix or Dismiss (False positive, Won\u2019t fix, Used in tests, Acceptable risk).</li> <li>Link fix via PR.</li> </ol>"},{"location":"03-Configuration/03-CodeScan/#47-suppress-in-code-last-resort","title":"4.7 Suppress in Code (last resort)","text":"<pre><code>// codeql[js/incomplete-sanitization] Reason: validated upstream\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#48-enforce-via-branch-protection","title":"4.8 Enforce via Branch Protection","text":"<p>Add CodeQL checks as required status checks after first successful run.</p>"},{"location":"03-Configuration/03-CodeScan/#5-secret-scanning","title":"5. Secret Scanning","text":""},{"location":"03-Configuration/03-CodeScan/#51-push-protection-flow","title":"5.1 Push Protection Flow","text":"<ol> <li>Developer pushes commit with secret.</li> <li>GitHub blocks push; shows remediation.</li> <li>Developer removes secret (preferred) or bypasses with justification (audited).</li> </ol>"},{"location":"03-Configuration/03-CodeScan/#52-custom-patterns-ghas","title":"5.2 Custom Patterns (GHAS)","text":"<p>Security \u2192 Secret scanning \u2192 Custom patterns \u2192 New pattern. Example regex: <code>INT-API-[0-9A-F]{32}</code></p> <p>Warning</p> <pre><code>Keep patterns specific to avoid false positives.\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#53-triage","title":"5.3 Triage","text":"<p>For each alert: verify exposure, revoke/rotate, optionally rewrite history, resolve with reason.</p>"},{"location":"03-Configuration/03-CodeScan/#54-sla-guidance","title":"5.4 SLA Guidance","text":"Severity Example SLA High Cloud root keys 4 hours Medium Internal API tokens 1 business day Low Test credentials 3 days"},{"location":"03-Configuration/03-CodeScan/#6-dependency-review","title":"6. Dependency Review","text":""},{"location":"03-Configuration/03-CodeScan/#61-use","title":"6.1 Use","text":"<p>Shows added/removed/updated dependencies, vulnerabilities, licenses in PR.</p>"},{"location":"03-Configuration/03-CodeScan/#62-workflow-optional-gate","title":"6.2 Workflow (optional gate)","text":"<p><code>.github/workflows/dependency-review.yml</code>:</p> <pre><code>name: Dependency Review\non: [pull_request]\npermissions:\n    contents: read\n    pull-requests: read\njobs:\n    review:\n        runs-on: ubuntu-latest\n        steps:\n            - uses: actions/checkout@v4\n            - uses: actions/dependency-review-action@v4\n                with:\n                    fail-on-severity: high\n                    # allow-licenses: MIT,Apache-2.0\n                    # deny-licenses: GPL-3.0\n                    # comment-summary-in-pr: true\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#63-dependabot-updates","title":"6.3 Dependabot Updates","text":"<p><code>.github/dependabot.yml</code>:</p> <pre><code>version: 2\nupdates:\n    - package-ecosystem: npm\n        directory: /\n        schedule:\n            interval: weekly\n        open-pull-requests-limit: 5\n    - package-ecosystem: pip\n        directory: /\n        schedule:\n            interval: weekly\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#7-branch-protection-integration","title":"7. Branch Protection Integration","text":"Feature Check Name Example Action CodeQL CodeQL / Analyze (javascript) Require Dependency Review Dependency Review / review Require Secret Scanning (none) Rely on push protection <p>Add checks under Branch protection \u2192 Require status checks.</p>"},{"location":"03-Configuration/03-CodeScan/#8-alert-review-workflow","title":"8. Alert Review Workflow","text":"Step Action Owner Detect Scan creates alert Automation Triage Validate severity Security Champion Assign Link issue/PR Eng Lead Remediate Patch / rotate Developer Verify Confirm closure Security Report Metrics &amp; trends Security Ops <p>Tip</p> <pre><code>Tag security when dismissing or suppressing findings.\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#9-advanced-topics","title":"9. Advanced Topics","text":""},{"location":"03-Configuration/03-CodeScan/#91-sarif-upload-3rd-party","title":"9.1 SARIF Upload (3rd Party)","text":"<pre><code>            - name: Upload SARIF\n                uses: github/codeql-action/upload-sarif@v3\n                with:\n                    sarif_file: results.sarif\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#92-secret-pattern-anchoring","title":"9.2 Secret Pattern Anchoring","text":"<p><code>\\bAKIA[0-9A-Z]{16}\\b</code></p>"},{"location":"03-Configuration/03-CodeScan/#93-noise-reduction","title":"9.3 Noise Reduction","text":"<ul> <li>Start with default packs only.</li> <li>Audit dismissals; convert recurring false positives into custom query tweaks.</li> <li>Incrementally tighten severity gates.</li> </ul>"},{"location":"03-Configuration/03-CodeScan/#94-license-policy","title":"9.4 License Policy","text":"<p>Use dependency review action <code>allow-licenses</code> / <code>deny-licenses</code> to enforce governance.</p>"},{"location":"03-Configuration/03-CodeScan/#10-metrics","title":"10. Metrics","text":"Metric Target CodeQL MTTR &lt; 14 days Secret Exposure Window &lt; 1 hour high severity Vulnerable Dependency Introduction 0% High severity False Positive Rate &lt; 10%"},{"location":"03-Configuration/03-CodeScan/#11-troubleshooting","title":"11. Troubleshooting","text":"Issue Cause Fix No CodeQL alerts Wrong language / no runs Verify workflow triggers &amp; languages Missing status check Name mismatch Copy exact check name post-run Push not blocked Pattern gap / bypass Add custom pattern, review bypass logs Slow CodeQL job Large build Cache deps / split languages Dependency Review missing Dependency graph off Enable in settings <p>Note</p> <pre><code>Some alerts appear only after first successful default branch scan.\n</code></pre>"},{"location":"03-Configuration/03-CodeScan/#12-next-steps","title":"12. Next Steps","text":"<ol> <li>Promote workflow &amp; config to template repo.</li> <li>Add CODEOWNERS for <code>.github/workflows/**</code>.</li> <li>Export alerts weekly (governance dashboard).</li> <li>Add security KPIs to sprint review.</li> </ol> <p>By completing this lab you established a proactive security baseline using native GitHub: CodeQL, Secret Scanning, and Dependency-aware reviews. Iterate on queries, secret patterns, and gating policies as the codebase evolves.</p>"},{"location":"04-Collaboration/","title":"Lab 04: Collaboration","text":"<p>\u2003\ud83d\udc65\u2003This lab guides you through GitHub\u2019s powerful collaboration features that enhance team communication and project management. \u2003\ud83d\udc65\u2003You will learn to use Issues, Wiki, Discussions, Projects, Teams, and GitHub Pages for effective collaboration.</p>"},{"location":"04-Collaboration/#lab-contents","title":"Lab Contents","text":"<p>\u2003\ud83d\udc1b Issues Management \u2003\ud83d\udcda Wiki Documentation \u2003\ud83d\udcac Discussions &amp; Community \u2003\ud83d\udccb Projects &amp; Workflows \u2003\ud83d\udc65 Teams &amp; Permissions \u2003\ud83d\udd14 Notifications \u2003\u2699\ufe0f Advanced Features \u2003\ud83c\udf10 GitHub Pages</p>"},{"location":"04-Collaboration/#summary","title":"Summary","text":"<p>By completing this lab you will be able to:</p> <p>\u2003\u2705\u2003Set up and manage GitHub Issues with templates and labels \u2003\u2705\u2003Create and maintain comprehensive Wiki documentation \u2003\u2705\u2003Enable and moderate GitHub Discussions for community engagement \u2003\u2705\u2003Organize work with GitHub Projects and Kanban boards \u2003\u2705\u2003Manage team permissions and collaboration workflows \u2003\u2705\u2003Configure notifications for optimal productivity \u2003\u2705\u2003Implement CODEOWNERS and automated review processes \u2003\u2705\u2003Deploy documentation and websites with GitHub Pages \u2003\u2705\u2003Apply best practices for effective team collaboration  </p>"},{"location":"04-Collaboration/01-Issues/","title":"GitHub Issues Management","text":"<ul> <li>This guide covers GitHub Issues setup, templates, labels, and best practices for tracking bugs and feature requests.</li> <li>You\u2019ll learn to create structured issue workflows for effective project management.</li> </ul>"},{"location":"04-Collaboration/01-Issues/#1-issues-overview","title":"1. Issues Overview","text":"<p>Issues Benefits</p> <p>GitHub Issues provide a powerful way to track work on your repository:</p> <ul> <li>Bug Tracking: Report and track software bugs with detailed information</li> <li>Feature Requests: Collect and prioritize new feature ideas from users</li> <li>Task Management: Break down work into manageable, trackable units</li> <li>Project Planning: Link issues to milestones and project boards</li> <li>Team Communication: Discuss solutions and collaborate on fixes</li> <li>Documentation: Maintain a searchable history of problems and solutions</li> <li>Integration: Connect with pull requests, commits, and automation</li> <li>Community Engagement: Allow external contributors to report issues</li> </ul>"},{"location":"04-Collaboration/01-Issues/#2-enable-issues","title":"2. Enable Issues","text":"<p>Private Repositories</p> <p>Issues are automatically enabled for public repositories but must be manually enabled for private repositories.</p> <ol> <li>Navigate to your repository on GitHub</li> <li>Click \u201cSettings\u201d tab</li> <li>Click \u201cGeneral\u201d tab</li> <li>Scroll down to \u201cFeatures\u201d section</li> <li>Ensure \u201cIssues\u201d checkbox is checked</li> </ol> <p></p>"},{"location":"04-Collaboration/01-Issues/#3-create-issue-templates","title":"3. Create Issue Templates","text":"<p>Issue templates standardize how bugs and features are reported, ensuring you get all necessary information.</p>"},{"location":"04-Collaboration/01-Issues/#31-set-up-templates","title":"3.1. Set Up Templates","text":"<ol> <li>In your repository, navigate to \u201cSettings\u201d \u2192 \u201cFeatures\u201d</li> <li>Click \u201cSet up templates\u201d next to Issues</li> <li>Choose from predefined templates or create custom ones</li> </ol>"},{"location":"04-Collaboration/01-Issues/#32-bug-report-template","title":"3.2. Bug Report Template","text":"<p>Create <code>.github/ISSUE_TEMPLATE/bug_report.md</code>:</p> <pre><code>---\nname: Bug report\nabout: Create a report to help us improve\ntitle: '[BUG] '\nlabels: 'bug'\nassignees: ''\n---\n\n**Describe the bug**\nA clear and concise description of what the bug is.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\nA clear and concise description of what you expected to happen.\n\n**Screenshots**\nIf applicable, add screenshots to help explain your problem.\n\n**Environment (please complete the following information):**\n - OS: [e.g. iOS]\n - Browser [e.g. chrome, safari]\n - Version [e.g. 22]\n\n**Additional context**\nAdd any other context about the problem here.\n</code></pre>"},{"location":"04-Collaboration/01-Issues/#33-feature-request-template","title":"3.3. Feature Request Template","text":"<p>Create <code>.github/ISSUE_TEMPLATE/feature_request.md</code>:</p> <pre><code>---\nname: Feature request\nabout: Suggest an idea for this project\ntitle: '[FEATURE] '\nlabels: 'enhancement'\nassignees: ''\n---\n\n**Is your feature request related to a problem? Please describe.**\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n\n**Describe the solution you'd like**\nA clear and concise description of what you want to happen.\n\n**Describe alternatives you've considered**\nA clear and concise description of any alternative solutions or features you've considered.\n\n**Additional context**\nAdd any other context or screenshots about the feature request here.\n</code></pre>"},{"location":"04-Collaboration/01-Issues/#34-custom-template","title":"3.4. Custom Template","text":"<p>Create <code>.github/ISSUE_TEMPLATE/custom.md</code>:</p> <pre><code>---\nname: Custom issue\nabout: Describe this issue template's purpose here.\ntitle: ''\nlabels: ''\nassignees: ''\n---\n\n**Summary**\nBrief description of the issue\n\n**Details**\nDetailed explanation of the request\n\n**Acceptance Criteria**\n- [ ] Criteria 1\n- [ ] Criteria 2\n- [ ] Criteria 3\n</code></pre>"},{"location":"04-Collaboration/01-Issues/#4-labels-and-organization","title":"4. Labels and Organization","text":""},{"location":"04-Collaboration/01-Issues/#41-default-labels","title":"4.1. Default Labels","text":"<p>GitHub provides default labels, but you should customize them for your project:</p> <ol> <li>Go to \u201cIssues\u201d tab in your repository</li> <li>Click \u201cLabels\u201d button</li> <li>Review and edit existing labels</li> </ol>"},{"location":"04-Collaboration/01-Issues/#42-recommended-label-system","title":"4.2. Recommended Label System","text":"<p>Create a comprehensive labeling system:</p> <p></p>"},{"location":"04-Collaboration/01-Issues/#type-labels","title":"Type Labels","text":"<ul> <li><code>bug</code> (red) - Something isn\u2019t working</li> <li><code>enhancement</code> (blue) - New feature or request</li> <li><code>documentation</code> (purple) - Improvements or additions to documentation</li> <li><code>question</code> (pink) - Further information is requested</li> </ul>"},{"location":"04-Collaboration/01-Issues/#priority-labels","title":"Priority Labels","text":"<ul> <li><code>priority: critical</code> (dark red) - Critical priority</li> <li><code>priority: high</code> (red) - High priority items</li> <li><code>priority: medium</code> (orange) - Medium priority items</li> <li><code>priority: low</code> (yellow) - Low priority items</li> </ul>"},{"location":"04-Collaboration/01-Issues/#status-labels","title":"Status Labels","text":"<ul> <li><code>status: accepted</code> (green) - Issue accepted for development</li> <li><code>status: blocked</code> (red) - Progress is blocked</li> <li><code>status: in progress</code> (yellow) - Currently being worked on</li> <li><code>status: needs review</code> (blue) - Needs review or feedback</li> </ul>"},{"location":"04-Collaboration/01-Issues/#effort-labels","title":"Effort Labels","text":"<ul> <li><code>effort: small</code> (light green) - Small effort required</li> <li><code>effort: medium</code> (yellow) - Medium effort required</li> <li><code>effort: large</code> (orange) - Large effort required</li> <li><code>effort: extra large</code> (red) - Extra large effort required</li> </ul>"},{"location":"04-Collaboration/01-Issues/#community-labels","title":"Community Labels","text":"<ul> <li><code>good first issue</code> (green) - Good for newcomers</li> <li><code>help wanted</code> (orange) - Extra attention is needed</li> <li><code>duplicate</code> (gray) - Duplicate of another issue</li> <li><code>wontfix</code> (white) - Won\u2019t be fixed</li> </ul>"},{"location":"04-Collaboration/01-Issues/#43-label-best-practices","title":"4.3. Label Best Practices","text":"<ul> <li>Use consistent colors for label categories</li> <li>Keep names short but descriptive</li> <li>Document your system in contributing guidelines</li> <li>Review and clean up unused labels regularly</li> </ul>"},{"location":"04-Collaboration/01-Issues/#5-milestones","title":"5. Milestones","text":""},{"location":"04-Collaboration/01-Issues/#51-create-milestones","title":"5.1. Create Milestones","text":"<ol> <li>In \u201cIssues\u201d tab, click \u201cMilestones\u201d</li> <li>Click \u201cNew milestone\u201d</li> <li>Fill in milestone details:</li> <li>Title: Descriptive name (e.g., \u201cv1.0 Release\u201d)</li> <li>Description: What this milestone represents</li> <li>Due date: Target completion date</li> </ol>"},{"location":"04-Collaboration/01-Issues/#52-milestone-examples","title":"5.2. Milestone Examples","text":"<ul> <li>Version Releases: \u201cv1.0\u201d, \u201cv1.1\u201d, \u201cv2.0\u201d</li> <li>Sprint Goals: \u201cSprint 1\u201d, \u201cSprint 2\u201d</li> <li>Feature Themes: \u201cUser Authentication\u201d, \u201cAPI Improvements\u201d</li> <li>Time-based: \u201cQ1 2025\u201d, \u201cJanuary 2025\u201d</li> </ul>"},{"location":"04-Collaboration/01-Issues/#53-using-milestones","title":"5.3. Using Milestones","text":"<ul> <li>Assign issues to appropriate milestones</li> <li>Track progress with the milestone view</li> <li>Close milestones when all issues are completed</li> <li>Review scope regularly and adjust as needed</li> </ul>"},{"location":"04-Collaboration/01-Issues/#6-issue-workflow","title":"6. Issue Workflow","text":""},{"location":"04-Collaboration/01-Issues/#61-creating-quality-issues","title":"6.1. Creating Quality Issues","text":"<p>For Bug Reports:</p> <ol> <li>Clear title that summarizes the problem </li> <li>Detailed description of what happened</li> <li>Steps to reproduce the issue</li> <li>Expected vs actual behavior</li> <li>Environment information (OS, browser, version)</li> <li>Screenshots or logs if applicable</li> </ol> <p>For Feature Requests:</p> <ol> <li>Descriptive title of the desired feature </li> <li>Problem statement explaining the need</li> <li>Proposed solution with details</li> <li>Alternative approaches considered</li> <li>Use cases and examples</li> </ol>"},{"location":"04-Collaboration/01-Issues/#62-issue-management-process","title":"6.2. Issue Management Process","text":"<ol> <li> <p>Triage new issues:</p> <ul> <li>Add appropriate labels</li> <li>Assign to team members</li> <li>Set milestone if applicable</li> <li>Ask for clarification if needed</li> </ul> </li> <li> <p>Prioritize work:</p> <ul> <li>Use priority labels</li> <li>Consider effort estimates</li> <li>Balance new features vs bug fixes</li> </ul> </li> <li> <p>Track progress:</p> <ul> <li>Update status labels</li> <li>Add comments with updates</li> <li>Link related issues and PRs</li> </ul> </li> <li> <p>Close resolved issues:</p> <ul> <li>Verify the fix works</li> <li>Thank contributors</li> <li>Document any follow-up needed</li> </ul> </li> </ol>"},{"location":"04-Collaboration/01-Issues/#7-advanced-issue-features","title":"7. Advanced Issue Features","text":""},{"location":"04-Collaboration/01-Issues/#71-issue-references","title":"7.1. Issue References","text":"<p>Cross-reference issues:</p> <ul> <li><code>#123</code> - Link to issue #123</li> <li><code>owner/repo#123</code> - Link to issue in another repository</li> <li><code>GH-123</code> - Alternative reference format</li> </ul> <p>Auto-close with commits:</p> <ul> <li><code>fixes #123</code> - Closes issue when merged</li> <li><code>closes #123</code> - Same as fixes</li> <li><code>resolves #123</code> - Same as fixes</li> </ul>"},{"location":"04-Collaboration/01-Issues/#72-issue-assignments","title":"7.2. Issue Assignments","text":"<ul> <li>Assign to individuals responsible for the work   </li> <li>Use team assignments for broader ownership </li> <li>Self-assign when picking up work  </li> <li>Reassign when handoffs occur  </li> </ul>"},{"location":"04-Collaboration/01-Issues/#73-issue-linking","title":"7.3. Issue Linking","text":"<ul> <li>Related issues: Reference with <code>#123</code></li> <li>Duplicate issues: Use \u201cduplicate\u201d label and reference original</li> <li>Parent/child relationships: Break large issues into smaller tasks</li> <li>Epic tracking: Use milestones or projects for large initiatives</li> </ul>"},{"location":"04-Collaboration/01-Issues/#8-automation-and-integration","title":"8. Automation and Integration","text":""},{"location":"04-Collaboration/01-Issues/#81-github-actions-for-issues","title":"8.1. GitHub Actions for Issues","text":"<p>Create automated workflows for issue management:     <pre><code>name: Issue Management\non:\n  issues:\n    types: [opened, labeled]\n\njobs:\n  auto-assign:\n    if: github.event.action == 'opened'\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/github-script@v6\n        with:\n          script: |\n            github.rest.issues.addAssignees({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              issue_number: context.issue.number,\n              assignees: ['maintainer-username']\n            });\n</code></pre></p>"},{"location":"04-Collaboration/01-Issues/#82-issue-forms-beta","title":"8.2. Issue Forms (Beta)","text":"<p>Use issue forms for structured input:     <pre><code>name: Bug Report\ndescription: File a bug report\ntitle: \"[Bug]: \"\nlabels: [\"bug\", \"triage\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for taking the time to fill out this bug report!\n  - type: input\n    id: contact\n    attributes:\n      label: Contact Details\n      description: How can we get in touch with you if we need more info?\n      placeholder: ex. email@example.com\n    validations:\n      required: false\n</code></pre></p>"},{"location":"04-Collaboration/01-Issues/#9-best-practices","title":"9. Best Practices","text":"<p>Issue Management Best Practices</p> <p>Organization</p> <ul> <li>Use consistent labeling across repositories</li> <li>Create clear issue templates</li> <li>Maintain up-to-date milestones</li> <li>Regular triage and cleanup</li> </ul> <p>Communication</p> <ul> <li>Write clear, descriptive titles</li> <li>Provide enough context for others to understand</li> <li>Update issues with progress and blockers</li> <li>Thank contributors for their reports</li> </ul> <p>Workflow</p> <ul> <li>Establish team conventions for labels and assignments</li> <li>Use automation to reduce manual work</li> <li>Link issues to pull requests</li> <li>Close issues promptly when resolved</li> </ul> <p>Community</p> <ul> <li>Welcome first-time contributors</li> <li>Provide clear contribution guidelines</li> <li>Respond to issues in a timely manner</li> <li>Use \u201cgood first issue\u201d labels for onboarding</li> </ul>"},{"location":"04-Collaboration/01-Issues/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Enable and configure GitHub Issues for your repository \u2003\u2003\u2705\u2003Create effective issue templates for bugs and features \u2003\u2003\u2705\u2003Implement a comprehensive labeling system \u2003\u2003\u2705\u2003Use milestones for project planning and tracking \u2003\u2003\u2705\u2003Manage issue workflows and team processes \u2003\u2003\u2705\u2003Apply automation for efficient issue management \u2003\u2003\u2705\u2003Follow best practices for community engagement  </p>"},{"location":"04-Collaboration/02-Wiki/","title":"GitHub Wiki Documentation","text":"<ul> <li>This guide covers setting up and maintaining GitHub Wiki for comprehensive project documentation.</li> <li>You\u2019ll learn best practices for organizing, writing, and managing wiki content.</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#1-wiki-overview","title":"1. Wiki Overview","text":"<p>Wiki Benefits</p> <p>GitHub Wiki provides a dedicated space for project documentation:</p> <ul> <li>Comprehensive Documentation: Detailed guides, tutorials, and reference materials</li> <li>Easy Editing: Simple Markdown-based editing with version control</li> <li>Searchable Content: Built-in search functionality for large wikis</li> <li>Collaborative Writing: Multiple contributors can edit and improve content</li> <li>Version History: Track changes and revert if necessary</li> <li>Cross-linking: Easy navigation between related topics</li> <li>Media Support: Include images, videos, and other media</li> <li>Access Control: Manage who can read and edit wiki content</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#2-enable-wiki","title":"2. Enable Wiki","text":""},{"location":"04-Collaboration/02-Wiki/#21-repository-settings","title":"2.1. Repository Settings","text":"<ol> <li>Navigate to your repository on GitHub</li> <li>Click \u201cSettings\u201d tab</li> <li>Click \u201cGeneral\u201d tab</li> <li>Scroll down to \u201cFeatures\u201d section</li> <li>Ensure \u201cWikis\u201d checkbox is checked</li> </ol>"},{"location":"04-Collaboration/02-Wiki/#22-access-permissions","title":"2.2. Access Permissions","text":"<p>Wiki Permissions</p> <p>You can restrict wiki editing to collaborators while keeping it readable for everyone.</p> <ul> <li>Public repositories: Wiki is publicly readable by default</li> <li>Private repositories: Wiki follows repository access permissions</li> <li>Edit permissions: Configurable in repository settings</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#3-creating-wiki-pages","title":"3. Creating Wiki Pages","text":""},{"location":"04-Collaboration/02-Wiki/#31-first-page","title":"3.1. First Page","text":"<ol> <li>Click \u201cWiki\u201d tab in your repository</li> <li>Click \u201cCreate the first page\u201d</li> <li>Choose page title (becomes the URL slug)</li> <li>Write content in Markdown</li> <li>Add edit summary (optional)</li> <li>Click \u201cSave Page\u201d</li> </ol>"},{"location":"04-Collaboration/02-Wiki/#32-additional-pages","title":"3.2. Additional Pages","text":"<ol> <li>From any wiki page, click \u201cNew Page\u201d</li> <li>Enter page title in the text field</li> <li>Click \u201cCreate Page\u201d</li> <li>Write your content</li> <li>Save the page</li> </ol>"},{"location":"04-Collaboration/02-Wiki/#33-page-naming-conventions","title":"3.3. Page Naming Conventions","text":"<ul> <li>Use clear, descriptive titles: \u201cInstallation Guide\u201d vs \u201cInstall\u201d</li> <li>Follow consistent patterns: \u201cAPI-Reference\u201d, \u201cUser-Guide\u201d</li> <li>Avoid special characters: Use hyphens instead of spaces</li> <li>Consider hierarchy: \u201cGetting-Started-Installation\u201d for sub-topics</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#4-wiki-structure-best-practices","title":"4. Wiki Structure Best Practices","text":""},{"location":"04-Collaboration/02-Wiki/#41-recommended-structure","title":"4.1. Recommended Structure","text":"<ul> <li>Example for Wiki Structure:<pre><code>Home (Landing Page)\n\u251c\u2500\u2500 Getting Started\n\u2502   \u251c\u2500\u2500 Installation Guide\n\u2502   \u251c\u2500\u2500 Quick Start Tutorial\n\u251c\u2500\u2500 User Guide\n\u2502   \u251c\u2500\u2500 Basic Usage\n\u2502   \u251c\u2500\u2500 Advanced Features\n\u251c\u2500\u2500 Developer Guide\n\u2502   \u251c\u2500\u2500 Contributing Guidelines\n\u2502   \u251c\u2500\u2500 API Documentation\n\u2502   \u2514\u2500\u2500 Testing Guide\n\u251c\u2500\u2500 Administration\n\u2502   \u251c\u2500\u2500 Deployment Guide\n\u2502   \u251c\u2500\u2500 Security Configuration\n\u251c\u2500\u2500 Reference\n\u2502   \u251c\u2500\u2500 API Reference\n\u2502   \u251c\u2500\u2500 Command Line Interface\n\u2502   \u2514\u2500\u2500 Glossary\n\u2514\u2500\u2500 Resources\n    \u251c\u2500\u2500 FAQ\n    \u251c\u2500\u2500 Changelog\n    \u251c\u2500\u2500 External Links\n    \u2514\u2500\u2500 Community Resources\n</code></pre> </li> </ul>"},{"location":"04-Collaboration/02-Wiki/#42-home-page-design","title":"4.2. Home Page Design","text":"<ul> <li> <p>Example of your wiki welcome (home) page:</p> <pre><code># Project Name Wiki\n\nWelcome to the comprehensive documentation for [Project Name].\n\n## Quick Navigation\n\n### \ud83d\ude80 Getting Started\n- [Installation Guide](Installation-Guide)\n- [Quick Start Tutorial](Quick-Start-Tutorial)\n- [Configuration](Configuration)\n\n### \ud83d\udcd6 User Guide\n- [Basic Usage](Basic-Usage)\n- [Advanced Features](Advanced-Features)\n- [Troubleshooting](Troubleshooting)\n\n### \ud83d\udc68\u200d\ud83d\udcbb Developer Resources\n- [Contributing Guidelines](Contributing-Guidelines)\n- [API Documentation](API-Documentation)\n- [Architecture Overview](Architecture-Overview)\n\n### \ud83d\udcda Reference\n- [FAQ](FAQ)\n- [Changelog](Changelog)\n- [Glossary](Glossary)\n\n## Project Overview\n\nBrief description of your project, its purpose, and key features.\n\n## Latest Updates\n\n- [Recent changes and announcements]\n\n## Support\n\n- [How to get help]\n- [Community resources]\n- [Contact information]\n</code></pre> </li> </ul>"},{"location":"04-Collaboration/02-Wiki/#5-wiki-formatting-and-content","title":"5. Wiki Formatting and Content","text":""},{"location":"04-Collaboration/02-Wiki/#51-markdown-elements","title":"5.1. Markdown Elements","text":"<p>Use these Markdown elements for rich content:</p> <pre><code># Main Heading (H1)\n## Section Heading (H2)\n### Subsection Heading (H3)\n\n**Bold text** and *italic text*\n\n`inline code` and code blocks:\n\n```bash\nnpm install package-name\nnpm start\n```\n\n&gt; Blockquotes for important notes\n\n- Unordered lists\n- With multiple items\n\n1. Ordered lists\n2. For step-by-step instructions\n\n[Link text](Page-Name-Or-URL)\n\n![Alt text](path/to/image.png)\n</code></pre>"},{"location":"04-Collaboration/02-Wiki/#52-tables","title":"5.2. Tables","text":"<p>Create tables for structured information:</p> <pre><code>| Feature    | Status     | Notes        |\n| ---------- | ---------- | ------------ |\n| User Auth  | \u2705 Complete | OAuth 2.0    |\n| API v1     | \u2705 Complete | RESTful API  |\n| API v2     | \ud83d\udea7 Progress | GraphQL      |\n| Mobile App | \ud83d\udccb Planned  | React Native |\n</code></pre>"},{"location":"04-Collaboration/02-Wiki/#53-cross-references","title":"5.3. Cross-References","text":"<p>Link between wiki pages and repository content:</p> <pre><code># Internal Wiki Links\n[Installation Guide](Installation-Guide)\n[API Reference](API-Reference)\n\n# Repository Files\n[README.md](../blob/main/README.md)\n[Source Code](../tree/main/src)\n[Configuration](../blob/main/config/settings.yml)\n\n# External Links\n[Official Documentation](https://example.com/docs)\n[Community Forum](https://forum.example.com)\n</code></pre>"},{"location":"04-Collaboration/02-Wiki/#54-media-and-assets","title":"5.4. Media and Assets","text":"<p>Include images and other media:</p> <pre><code># Repository Images\n![Screenshot](../blob/main/docs/images/screenshot.png)\n\n# External Images\n![Diagram](https://example.com/diagram.png)\n\n# Wiki-specific Assets\nUpload images directly to wiki pages or use external hosting\n</code></pre>"},{"location":"04-Collaboration/02-Wiki/#6-content-organization","title":"6. Content Organization","text":""},{"location":"04-Collaboration/02-Wiki/#61-writing-guidelines","title":"6.1. Writing Guidelines","text":"<p>Be Clear and Concise:</p> <ul> <li>Use simple, direct language</li> <li>Break up long paragraphs</li> <li>Use headings to organize content</li> <li>Include examples and code snippets</li> </ul> <p>Structure Information:</p> <ul> <li>Start with overview/summary</li> <li>Follow with detailed instructions</li> <li>Include troubleshooting sections</li> <li>End with related resources</li> </ul> <p>Maintain Consistency:</p> <ul> <li>Use consistent terminology</li> <li>Follow naming conventions</li> <li>Apply uniform formatting</li> <li>Maintain similar page structures</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#62-code-documentation","title":"6.2. Code Documentation","text":"<p>Include Working Examples:</p> <pre><code>## API Usage Example\n\nHere's how to authenticate and make a basic API call:\n\n```javascript\nconst api = new ProjectAPI({\n  apiKey: 'your-api-key',\n  baseUrl: 'https://api.example.com'\n});\n\nconst result = await api.users.list({\n  limit: 10,\n  sort: 'created_date'\n});\n\nconsole.log(result.data);\n```\n</code></pre> <p>Explain Parameters:</p> <pre><code>### Authentication\n\n| Parameter | Type   | Required | Description         |\n| --------- | ------ | -------- | ------------------- |\n| apiKey    | string | Yes      | Your API access key |\n| baseUrl   | string | No       | API base URL        |\n</code></pre>"},{"location":"04-Collaboration/02-Wiki/#63-update-management","title":"6.3. Update Management","text":"<p>Keep Content Current:</p> <ul> <li>Review and update regularly</li> <li>Mark outdated sections</li> <li>Remove obsolete information</li> <li>Update version-specific content</li> </ul> <p>Version Control:</p> <ul> <li>Use clear edit summaries</li> <li>Document major changes</li> <li>Coordinate with team members</li> <li>Review changes before publishing</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#7-advanced-wiki-features","title":"7. Advanced Wiki Features","text":""},{"location":"04-Collaboration/02-Wiki/#71-sidebar-navigation","title":"7.1. Sidebar Navigation","text":"<p>Create a custom sidebar for easy navigation:</p> <ol> <li>Create a page named <code>_Sidebar</code></li> <li> <p>Add navigation links:</p> <pre><code>## Navigation\n\n### Getting Started\n- [Installation](Installation)\n- [Quick Start](Quick-Start)\n\n### User Guide\n- [Basic Usage](Basic-Usage)\n- [Advanced Features](Advanced-Features)\n\n### Reference\n- [API Docs](API-Documentation)\n- [FAQ](FAQ)\n</code></pre> </li> </ol>"},{"location":"04-Collaboration/02-Wiki/#72-footer-content","title":"7.2. Footer Content","text":"<p>Add consistent footer information:</p> <ol> <li>Create a page named <code>_Footer</code></li> <li> <p>Include project information:</p> <pre><code>---\n**Project Name** | [GitHub Repository](../../../) | [Issues](../../../issues) | [Discussions](../../../discussions)\n</code></pre> </li> </ol>"},{"location":"04-Collaboration/02-Wiki/#73-search-optimization","title":"7.3. Search Optimization","text":"<p>Improve wiki searchability:</p> <ul> <li>Use descriptive headings</li> <li>Include relevant keywords</li> <li>Create comprehensive content</li> <li>Cross-reference related topics</li> <li>Maintain consistent terminology</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#8-maintenance-and-collaboration","title":"8. Maintenance and Collaboration","text":""},{"location":"04-Collaboration/02-Wiki/#81-regular-reviews","title":"8.1. Regular Reviews","text":"<p>Content Audits:</p> <ul> <li>Monthly review of popular pages</li> <li>Quarterly comprehensive review</li> <li>Annual structure reorganization</li> <li>Continuous improvement based on feedback</li> </ul> <p>Quality Checks:</p> <ul> <li>Verify all links work</li> <li>Test code examples</li> <li>Update screenshots and images</li> <li>Check for broken references</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#82-team-collaboration","title":"8.2. Team Collaboration","text":"<p>Editing Guidelines:</p> <ul> <li>Establish style guide</li> <li>Define review process</li> <li>Assign page ownership</li> <li>Create update schedules</li> </ul> <p>Communication:</p> <ul> <li>Discuss major changes</li> <li>Use edit summaries effectively</li> <li>Coordinate with repository updates</li> <li>Share knowledge and expertise</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#83-integration-with-development","title":"8.3. Integration with Development","text":"<p>Keep Synchronized:</p> <ul> <li>Update wiki with code changes</li> <li>Document new features promptly</li> <li>Archive deprecated functionality</li> <li>Maintain version compatibility notes</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#9-migration-and-backup","title":"9. Migration and Backup","text":""},{"location":"04-Collaboration/02-Wiki/#91-wiki-backup","title":"9.1. Wiki Backup","text":"<p>Regularly backup your wiki content:</p> <ol> <li> <p>Clone the wiki repository:</p> <p>git clone https://github.com/username/repository.wiki.git</p> </li> <li> <p>Create periodic backups of the entire wiki</p> </li> </ol>"},{"location":"04-Collaboration/02-Wiki/#92-content-migration","title":"9.2. Content Migration","text":"<p>From Other Platforms:</p> <ul> <li>Convert existing documentation</li> <li>Preserve formatting and structure</li> <li>Update links and references</li> <li>Test all functionality</li> </ul> <p>Wiki Export:</p> <ul> <li>GitHub wikis are Git repositories</li> <li>Can be cloned and moved</li> <li>Content is in Markdown format</li> <li>Preserves edit history</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#10-best-practices","title":"10. Best Practices","text":"<p>Wiki Best Practices</p> <p>Content Quality </p> <ul> <li>Write for your audience</li> <li>Use clear, simple language</li> <li>Include practical examples</li> <li>Keep information current</li> </ul> <p>Organization </p> <ul> <li>Create logical page hierarchy</li> <li>Use consistent naming conventions</li> <li>Implement effective navigation</li> <li>Cross-reference related content</li> </ul> <p>Maintenance</p> <ul> <li>Regular content reviews</li> <li>Update with code changes</li> <li>Remove outdated information</li> <li>Monitor page analytics</li> </ul> <p>Collaboration</p> <ul> <li>Establish editing guidelines</li> <li>Define page ownership</li> <li>Use clear edit summaries</li> <li>Coordinate team updates</li> </ul>"},{"location":"04-Collaboration/02-Wiki/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Enable and configure GitHub Wiki for your repository \u2003\u2003\u2705\u2003Create well-structured documentation pages \u2003\u2003\u2705\u2003Use effective Markdown formatting and media \u2003\u2003\u2705\u2003Organize content with logical hierarchy \u2003\u2003\u2705\u2003Implement navigation and cross-referencing \u2003\u2003\u2705\u2003Maintain and update wiki content \u2003\u2003\u2705\u2003Collaborate effectively with team members \u2003\u2003\u2705\u2003Maintain and update wiki content \u2003\u2003\u2705\u2003Collaborate effectively with team members  </p>"},{"location":"04-Collaboration/03-Discussions/","title":"GitHub Discussions &amp; Community","text":"<ul> <li>This guide covers GitHub Discussions for building and engaging with your project community.</li> <li>You\u2019ll learn to set up, moderate, and foster meaningful conversations around your project.</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#1-discussions-overview","title":"1. Discussions Overview","text":"<p>Discussions Benefits</p> <p>GitHub Discussions provide a space for community conversations:</p> <ul> <li>Community Building: Foster engagement beyond code contributions</li> <li>Q&amp;A Support: Answer user questions in a searchable format</li> <li>Feature Discussions: Gather feedback on proposed features</li> <li>Announcements: Share updates and important information</li> <li>Show and Tell: Let users showcase their work with your project</li> <li>Knowledge Base: Build a searchable repository of conversations</li> <li>Reduced Issue Noise: Keep support questions out of issue tracker</li> <li>Threaded Conversations: Organize discussions with replies and reactions</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#2-enable-discussions","title":"2. Enable Discussions","text":"<p>Public vs Private</p> <p>Discussions follow repository visibility settings.  Private repository discussions are only visible to collaborators.</p>"},{"location":"04-Collaboration/03-Discussions/#21-repository-settings","title":"2.1. Repository Settings","text":"<ol> <li>Navigate to your repository on GitHub</li> <li>Click \u201cSettings\u201d tab</li> <li>Click \u201cGeneral\u201d tab</li> <li>Scroll down to \u201cFeatures\u201d section</li> <li>Check \u201cDiscussions\u201d checkbox</li> </ol>"},{"location":"04-Collaboration/03-Discussions/#22-initial-configuration","title":"2.2. Initial Configuration","text":"<p>After enabling, you\u2019ll see:</p> <ul> <li>Discussions tab appears in repository navigation</li> <li>Default categories are created automatically</li> <li>Welcome post is generated (customizable)</li> <li>Moderation tools become available</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#3-discussion-categories","title":"3. Discussion Categories","text":""},{"location":"04-Collaboration/03-Discussions/#31-default-categories","title":"3.1. Default Categories","text":"<p>GitHub provides these default categories:</p> <ul> <li>\ud83d\udcac General: General conversations about the repository</li> <li>\ud83d\udca1 Ideas: Share ideas for new features  </li> <li>\ud83d\ude4f Q&amp;A: Ask the community for help</li> <li>\ud83d\ude4c Show and tell: Show off something you\u2019ve made</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#32-custom-categories","title":"3.2. Custom Categories","text":"<p>Create additional categories based on your project needs:</p> <ol> <li>Go to \u201cDiscussions\u201d tab</li> <li>Click \u201cEdit\u201d next to categories</li> <li>Click \u201cNew category\u201d</li> <li>Configure category settings:<ul> <li>Name: Descriptive category name</li> <li>Description: What belongs in this category</li> <li>Emoji: Visual identifier</li> <li>Format: Discussion or Q&amp;A format</li> </ul> </li> </ol>"},{"location":"04-Collaboration/03-Discussions/#33-recommended-categories","title":"3.3. Recommended Categories","text":"<p>For Open Source Projects:</p> <ul> <li>\ud83d\udce3 Announcements: Updates from maintainers</li> <li>\ud83c\udd98 Support: Help with using the project</li> <li>\ud83d\udd27 Development: Technical discussions about the codebase</li> <li>\ud83d\udcda Documentation: Questions and improvements for docs</li> <li>\ud83c\udf1f Feature Requests: Discuss potential new features</li> <li>\ud83c\udfaf Roadmap: Project direction and planning</li> </ul> <p>For Product Teams:</p> <ul> <li>\ud83d\udccb Product Updates: Release notes and feature announcements</li> <li>\ud83d\udcad User Feedback: Collect user opinions and suggestions</li> <li>\ud83d\udd0d Research: User research discussions and findings</li> <li>\ud83d\ude80 Beta Testing: Feedback on beta features</li> <li>\ud83d\udcca Analytics: Data-driven discussions</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#34-category-configuration","title":"3.4. Category Configuration","text":"<p>Discussion Format:</p> <ul> <li>Open-ended discussion: General conversation format</li> <li>Question/Answer: Q&amp;A format with accepted answers</li> </ul> <p>Category Settings:</p> <ul> <li>Emoji: Visual representation</li> <li>Description: Clear explanation of purpose</li> <li>Pinning: Pin important discussions</li> <li>Locking: Lock resolved or outdated discussions</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#4-creating-effective-discussions","title":"4. Creating Effective Discussions","text":""},{"location":"04-Collaboration/03-Discussions/#41-discussion-types","title":"4.1. Discussion Types","text":"<p>Announcements:</p> <pre><code># \ud83d\ude80 Version 2.0 Released!\n\nWe're excited to announce the release of version 2.0 with these major improvements:\n\n## \ud83c\udd95 New Features\n- Feature A: [Description]\n- Feature B: [Description]\n\n## \ud83d\udc1b Bug Fixes\n- Fixed issue with X\n- Resolved problem in Y\n\n## \ud83d\udcda Documentation\n- Updated installation guide\n- Added new tutorials\n\n## \ud83d\udd04 Breaking Changes\n- [List any breaking changes]\n\n## \ud83d\udcde Feedback\nLet us know what you think about these changes!\n</code></pre> <p>Q&amp;A Discussions:</p> <pre><code># How do I configure X for Y use case?\n\n## Context\nI'm trying to set up the project for [specific use case].\n\n## What I've Tried\n- Attempted approach A\n- Tried configuration B\n- Reviewed documentation section C\n\n## Expected Outcome\nI expect [specific result].\n\n## Current Issue\nInstead, I'm getting [specific error or unexpected behavior].\n\n## Environment\n- OS: [Operating System]\n- Version: [Project Version]\n- Configuration: [Relevant settings]\n</code></pre> <p>Feature Discussions:</p> <pre><code># \ud83d\udca1 Proposal: Add support for feature X\n\n## Problem Statement\nCurrently, users cannot [specific limitation].\n\n## Proposed Solution\nAdd feature X that would allow users to [capability].\n\n## Use Cases\n1. Use case A: [Description]\n2. Use case B: [Description]\n\n## Implementation Ideas\n- Approach 1: [Description]\n- Approach 2: [Description]\n\n## Questions for Community\n- Would this be useful for your projects?\n- Any concerns about the proposed approach?\n- Alternative suggestions?\n</code></pre>"},{"location":"04-Collaboration/03-Discussions/#42-writing-guidelines","title":"4.2. Writing Guidelines","text":"<p>Clear Titles:</p> <ul> <li>Be specific and descriptive</li> <li>Include relevant keywords</li> <li>Use emojis for visual categorization</li> <li>Avoid vague titles like \u201cHelp needed\u201d</li> </ul> <p>Structured Content:</p> <ul> <li>Start with context or summary</li> <li>Use headings to organize information</li> <li>Include code examples when relevant</li> <li>End with clear questions or calls to action</li> </ul> <p>Code Examples:</p> <pre><code>## Example Implementation\n\n```javascript\nconst config = {\n  feature: 'enabled',\n  options: {\n    setting1: 'value1',\n    setting2: 'value2'\n  }\n};\n\nconst result = await processConfig(config);\nconsole.log(result);\n```\n\nThis configuration should produce [expected output].\n</code></pre>"},{"location":"04-Collaboration/03-Discussions/#5-community-engagement","title":"5. Community Engagement","text":""},{"location":"04-Collaboration/03-Discussions/#51-encouraging-participation","title":"5.1. Encouraging Participation","text":"<p>Welcome New Members:</p> <ul> <li>Respond warmly to first-time contributors</li> <li>Thank users for questions and feedback</li> <li>Provide helpful resources and links</li> <li>Use encouraging language</li> </ul> <p>Facilitate Discussions:</p> <ul> <li>Ask follow-up questions</li> <li>Summarize complex discussions</li> <li>Connect related conversations</li> <li>Highlight valuable contributions</li> </ul> <p>Recognition:</p> <ul> <li>Thank contributors publicly</li> <li>Highlight excellent answers</li> <li>Feature community contributions</li> <li>Create contributor spotlights</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#52-moderation-best-practices","title":"5.2. Moderation Best Practices","text":"<p>Clear Community Guidelines:</p> <pre><code># Community Guidelines\n\n## Be Respectful\n- Treat all community members with respect\n- Use welcoming and inclusive language\n- Respect different opinions and experiences\n\n## Stay On Topic\n- Keep discussions relevant to the project\n- Use appropriate categories\n- Search before posting duplicates\n\n## Be Constructive\n- Provide helpful feedback\n- Include context and examples\n- Suggest solutions when pointing out problems\n\n## No Spam or Self-Promotion\n- Avoid excessive self-promotion\n- No spam or off-topic advertising\n- Focus on helping the community\n</code></pre> <p>Moderation Actions:</p> <ul> <li>Edit discussions to improve clarity</li> <li>Move discussions to appropriate categories</li> <li>Lock discussions when resolved or off-topic</li> <li>Delete spam or inappropriate content</li> <li>Convert issues to discussions when appropriate</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#53-response-templates","title":"5.3. Response Templates","text":"<p>Create templates for common responses:</p> <p>Thanks for Contributing:</p> <pre><code>Thanks for bringing this up! This is a great question that others might have too.\n\n[Answer or guidance]\n\nFeel free to ask if you need any clarification!\n</code></pre> <p>Duplicate Discussion:</p> <pre><code>Thanks for your question! This topic has been discussed previously in [link to other discussion].\n\nYou might find the answers there helpful.   \nIf you have additional specific questions after reviewing that discussion, please let us know!\n</code></pre> <p>Converting Issue to Discussion:</p> <pre><code>Hi! This looks like a great discussion topic rather than a specific bug or feature request.\n\nI'm converting this to a discussion so our community can provide input and we can explore this topic together.\n</code></pre>"},{"location":"04-Collaboration/03-Discussions/#6-advanced-discussion-features","title":"6. Advanced Discussion Features","text":""},{"location":"04-Collaboration/03-Discussions/#61-polls-and-surveys","title":"6.1. Polls and Surveys","text":"<p>Use polls to gather community input:</p> <pre><code># \ud83d\udcca Which feature should we prioritize next?\n\nWe're planning our next development sprint and would love your input!\n\n## Options\n- [ ] Feature A: Advanced authentication\n- [ ] Feature B: Mobile API improvements  \n- [ ] Feature C: Performance optimizations\n- [ ] Feature D: New dashboard features\n\nPlease vote by reacting with:\n- \ud83d\udc4d for Feature A\n- \u2764\ufe0f for Feature B  \n- \ud83d\ude80 for Feature C\n- \ud83c\udfaf for Feature D\n\n**Voting closes**: [Date]\n</code></pre>"},{"location":"04-Collaboration/03-Discussions/#62-linking-and-cross-references","title":"6.2. Linking and Cross-References","text":"<p>Link to Related Content:</p> <ul> <li>Reference specific issues: <code>#123</code></li> <li>Link to pull requests: <code>#456</code></li> <li>Reference other discussions: Link or mention</li> <li>Connect to documentation: Include wiki links</li> </ul> <p>Repository Integration:</p> <pre><code>This discussion relates to:\n- Issue: #123 (Bug in authentication)\n- PR: #456 (Authentication improvements)\n- Documentation: [Auth Guide](../wiki/Authentication)\n</code></pre>"},{"location":"04-Collaboration/03-Discussions/#63-discussion-analytics","title":"6.3. Discussion Analytics","text":"<p>Monitor discussion health:</p> <ul> <li>Participation rates: Active vs passive users</li> <li>Response times: How quickly questions get answered</li> <li>Popular topics: Most engaging discussion themes</li> <li>Community growth: New participant trends</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#7-automation-and-integration","title":"7. Automation and Integration","text":""},{"location":"04-Collaboration/03-Discussions/#71-github-actions-for-discussions","title":"7.1. GitHub Actions for Discussions","text":"<ul> <li> <p>Automate discussion management:</p> <pre><code>name: Discussion Management\non:\n  discussion:\n    types: [created]\n  discussion_comment:\n    types: [created]\n\njobs:\n  auto-label:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/github-script@v6\n        with:\n          script: |\n            if (context.eventName === 'discussion') {\n              // Auto-assign moderators to new discussions\n              console.log('New discussion created:', context.payload.discussion.title);\n            }\n</code></pre> </li> </ul>"},{"location":"04-Collaboration/03-Discussions/#72-bot-integration","title":"7.2. Bot Integration","text":"<p>Use bots for common tasks:</p> <ul> <li>Welcome bot: Greet new participants</li> <li>FAQ bot: Auto-respond with common answers</li> <li>Moderation bot: Flag potential issues</li> <li>Summary bot: Create discussion summaries</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#73-external-integration","title":"7.3. External Integration","text":"<p>Connect discussions with external tools:</p> <ul> <li>Slack/Discord: Mirror important discussions</li> <li>Email notifications: Custom notification rules</li> <li>CRM systems: Track customer feedback</li> <li>Analytics tools: Monitor engagement metrics</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#8-managing-large-communities","title":"8. Managing Large Communities","text":""},{"location":"04-Collaboration/03-Discussions/#81-scaling-moderation","title":"8.1. Scaling Moderation","text":"<p>Multiple Moderators:</p> <ul> <li>Assign team members as moderators</li> <li>Define moderation responsibilities</li> <li>Create moderation guidelines</li> <li>Regular moderator communication</li> </ul> <p>Community Champions:</p> <ul> <li>Identify active, helpful community members</li> <li>Give recognition and special roles</li> <li>Encourage peer-to-peer support</li> <li>Create community leader programs</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#82-content-organization","title":"8.2. Content Organization","text":"<p>Regular Cleanup:</p> <ul> <li>Archive old or resolved discussions</li> <li>Lock outdated conversations</li> <li>Update category organization</li> <li>Prune spam or low-quality content</li> </ul> <p>Search Optimization:</p> <ul> <li>Use consistent terminology</li> <li>Tag discussions appropriately</li> <li>Create comprehensive titles</li> <li>Cross-reference related content</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#83-communication-channels","title":"8.3. Communication Channels","text":"<p>Multi-Channel Strategy:</p> <ul> <li>Discussions: Async, long-form conversations</li> <li>Issues: Specific bugs and features</li> <li>Chat platforms: Real-time communication</li> <li>Email: Official announcements</li> <li>Social media: Community highlights</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#9-best-practices","title":"9. Best Practices","text":"<p>Discussion Best Practices</p> <p>Community Building</p> <ul> <li>Welcome new members warmly</li> <li>Respond promptly to questions</li> <li>Encourage peer-to-peer help</li> <li>Recognize valuable contributions</li> </ul> <p>Content Quality</p> <ul> <li>Use clear, descriptive titles</li> <li>Provide context and examples</li> <li>Keep discussions on-topic</li> <li>Link to relevant resources</li> </ul> <p>Moderation</p> <ul> <li>Establish clear guidelines</li> <li>Be consistent in enforcement</li> <li>Address issues quickly</li> <li>Maintain positive atmosphere</li> </ul> <p>Growth</p> <ul> <li>Regular community engagement</li> <li>Feature interesting discussions</li> <li>Cross-promote across channels</li> <li>Monitor and improve processes</li> </ul>"},{"location":"04-Collaboration/03-Discussions/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Enable and configure GitHub Discussions for your repository \u2003\u2003\u2705\u2003Create and manage discussion categories effectively \u2003\u2003\u2705\u2003Foster community engagement and participation \u2003\u2003\u2705\u2003Moderate discussions and maintain quality \u2003\u2003\u2705\u2003Use advanced features for community building \u2003\u2003\u2705\u2003Scale discussion management for large communities \u2003\u2003\u2705\u2003Integrate discussions with development workflows  </p>"},{"location":"04-Collaboration/04-Projects/","title":"GitHub Projects &amp; Workflows","text":"<ul> <li>This guide covers GitHub Projects for organizing and tracking work across repositories.</li> <li>You\u2019ll learn to create project boards, automate workflows, and manage team productivity.</li> </ul>"},{"location":"04-Collaboration/04-Projects/#1-projects-overview","title":"1. Projects Overview","text":"<p>Projects Benefits</p> <p>GitHub Projects provide powerful project management capabilities:</p> <ul> <li>Kanban Boards: Visual workflow management</li> <li>Table Views: Spreadsheet-like data organization</li> <li>Roadmap Views: Timeline-based project planning</li> <li>Custom Fields: Track additional metadata</li> <li>Automation: Streamline repetitive tasks</li> <li>Multi-Repository: Organize work across repositories</li> <li>Team Collaboration: Shared workspace for teams</li> <li>Integration: Connect with issues and pull requests</li> </ul>"},{"location":"04-Collaboration/04-Projects/#2-project-types","title":"2. Project Types","text":""},{"location":"04-Collaboration/04-Projects/#21-repository-projects","title":"2.1. Repository Projects","text":"<ul> <li>Scope: Single repository</li> <li>Access: Repository permissions</li> <li>Use Case: Project-specific task management</li> <li>Location: Repository \u201cProjects\u201d tab</li> </ul>"},{"location":"04-Collaboration/04-Projects/#22-organization-projects","title":"2.2. Organization Projects","text":"<ul> <li>Scope: Multiple repositories</li> <li>Access: Organization permissions</li> <li>Use Case: Cross-team collaboration</li> <li>Location: Organization \u201cProjects\u201d tab</li> </ul>"},{"location":"04-Collaboration/04-Projects/#23-user-projects","title":"2.3. User Projects","text":"<ul> <li>Scope: Personal projects</li> <li>Access: User permissions</li> <li>Use Case: Individual task management</li> <li>Location: User profile \u201cProjects\u201d tab</li> </ul>"},{"location":"04-Collaboration/04-Projects/#3-creating-a-project","title":"3. Creating a Project","text":""},{"location":"04-Collaboration/04-Projects/#31-new-project-setup","title":"3.1. New Project Setup","text":"<ol> <li>Navigate to \u201cProjects\u201d tab (repository/organization/user)</li> <li>Click \u201cNew project\u201d</li> <li>Choose project template:<ul> <li>Board: Kanban-style workflow</li> <li>Table: Spreadsheet view</li> <li>Roadmap: Timeline-based planning</li> </ul> </li> <li>Enter project name and description</li> <li>Choose visibility (public/private)</li> <li>Click \u201cCreate project\u201d</li> </ol>"},{"location":"04-Collaboration/04-Projects/#32-project-templates","title":"3.2. Project Templates","text":"<p>Board Template:</p> <ul> <li>To Do: Items ready to be worked on</li> <li>In Progress: Currently active work</li> <li>Done: Completed items</li> </ul> <p>Table Template:</p> <ul> <li>Structured data view: Issues with metadata</li> <li>Custom fields: Priority, assignee, labels</li> <li>Sorting and filtering: Organize information</li> </ul> <p>Roadmap Template:</p> <ul> <li>Timeline view: Project milestones</li> <li>Date-based planning: Start and end dates</li> <li>Dependencies: Track relationships</li> </ul>"},{"location":"04-Collaboration/04-Projects/#4-board-view-configuration","title":"4. Board View Configuration","text":""},{"location":"04-Collaboration/04-Projects/#41-column-management","title":"4.1. Column Management","text":"<p>Default Columns:</p> <pre><code>To Do \u2192 In Progress \u2192 Done\n</code></pre> <p>Custom Workflow:</p> <pre><code>Backlog \u2192 Ready \u2192 In Progress \u2192 Review \u2192 Testing \u2192 Done\n</code></pre> <p>Advanced Workflow:</p> <pre><code>Ideas \u2192 Backlog \u2192 Sprint \u2192 Development \u2192 Code Review \u2192 Testing \u2192 Staging \u2192 Production \u2192 Done\n</code></pre>"},{"location":"04-Collaboration/04-Projects/#42-column-settings","title":"4.2. Column Settings","text":"<p>Column Configuration:</p> <ul> <li>Name: Descriptive column title</li> <li>Description: What belongs in this column</li> <li>Automation: Auto-move rules</li> <li>Limits: Work-in-progress limits</li> </ul> <p>Work-in-Progress Limits:    - Set maximum items per column    - Prevent bottlenecks    - Encourage completion    - Improve flow</p>"},{"location":"04-Collaboration/04-Projects/#43-card-management","title":"4.3. Card Management","text":"<p>Adding Cards:</p> <ul> <li>Convert existing issues: Link repository issues</li> <li>Create new items: Draft issues or notes</li> <li>External items: Add items from other repositories</li> </ul> <p>Card Information:</p> <ul> <li>Title: Brief description</li> <li>Body: Detailed information</li> <li>Assignees: Responsible team members</li> <li>Labels: Categorization</li> <li>Milestones: Project phases</li> </ul>"},{"location":"04-Collaboration/04-Projects/#5-table-view-features","title":"5. Table View Features","text":""},{"location":"04-Collaboration/04-Projects/#51-custom-fields","title":"5.1. Custom Fields","text":"<p>Field Types:</p> <ul> <li>Text: Short descriptions or notes</li> <li>Number: Priority scores or estimates</li> <li>Date: Deadlines or start dates</li> <li>Single select: Status or category</li> <li>Iteration: Sprint or milestone</li> </ul> <p>Example Custom Fields:</p> <ul> <li>Priority: High, Medium, Low</li> <li>Effort: 1, 2, 3, 5, 8 (story points)</li> <li>Component: Frontend, Backend, Database</li> <li>Status: Not started, In progress, Blocked, Done</li> </ul>"},{"location":"04-Collaboration/04-Projects/#52-filtering-and-sorting","title":"5.2. Filtering and Sorting","text":"<p>Common Filters:</p> <ul> <li>Assignee: Show items for specific team members</li> <li>Label: Filter by issue labels</li> <li>Milestone: Items in specific milestone</li> <li>Status: Current state of work</li> <li>Repository: Multi-repo project filtering</li> </ul> <p>Sorting Options:</p> <ul> <li>Priority: High to low importance</li> <li>Date: Creation or due dates</li> <li>Alphabetical: Title or assignee name</li> <li>Custom field: Any custom field value</li> </ul>"},{"location":"04-Collaboration/04-Projects/#53-bulk-operations","title":"5.3. Bulk Operations","text":"<p>Select Multiple Items:</p> <ul> <li>Use checkboxes to select items</li> <li>Apply labels to multiple items</li> <li>Assign multiple items to users</li> <li>Move items between projects</li> </ul>"},{"location":"04-Collaboration/04-Projects/#6-roadmap-view-planning","title":"6. Roadmap View Planning","text":""},{"location":"04-Collaboration/04-Projects/#61-timeline-configuration","title":"6.1. Timeline Configuration","text":"<p>Date Fields:</p> <ul> <li>Start date: When work begins</li> <li>Target date: Expected completion</li> <li>Duration: Calculated time span</li> </ul> <p>Milestone Tracking:</p> <ul> <li>Major releases: Version milestones</li> <li>Sprint goals: Iteration targets</li> <li>Project phases: Development stages</li> </ul>"},{"location":"04-Collaboration/04-Projects/#62-dependencies","title":"6.2. Dependencies","text":"<p>Dependency Types:</p> <ul> <li>Blocks: Item A blocks item B</li> <li>Blocked by: Item A blocked by item B</li> <li>Related: Items are connected</li> </ul> <p>Visualization:</p> <ul> <li>Dependency lines: Visual connections</li> <li>Critical path: Longest dependency chain</li> <li>Bottlenecks: Identification of constraints</li> </ul>"},{"location":"04-Collaboration/04-Projects/#7-automation","title":"7. Automation","text":""},{"location":"04-Collaboration/04-Projects/#71-built-in-automation","title":"7.1. Built-in Automation","text":"<p>Auto-add to Project:</p> <ul> <li>New issues automatically added</li> <li>Based on labels or repository</li> <li>Specific assignees or milestones</li> </ul> <p>Status Updates:</p> <ul> <li>Move cards when PR is opened</li> <li>Update status when issue is closed</li> <li>Progress based on linked items</li> </ul>"},{"location":"04-Collaboration/04-Projects/#72-workflow-automation","title":"7.2. Workflow Automation","text":"<p>Common Workflows:</p> <pre><code>When issue is created:\n\u2192 Add to \"Backlog\" column\n\u2192 Set priority based on labels\n\u2192 Assign to triage team\n\nWhen PR is opened:\n\u2192 Move linked issue to \"In Review\"\n\u2192 Add \"under review\" label\n\u2192 Notify stakeholders\n\nWhen PR is merged:\n\u2192 Move to \"Done\"\n\u2192 Close linked issues\n\u2192 Update project metrics\n</code></pre>"},{"location":"04-Collaboration/04-Projects/#73-github-actions-integration","title":"7.3. GitHub Actions Integration","text":"<ul> <li> <p>Custom automation with Actions:</p> <p>```yaml   name: Project Automation   on:     issues:       types: [opened, closed]     pull_request:       types: [opened, closed]</p> <p>jobs:     update-project:       runs-on: ubuntu-latest       steps:         - uses: actions/add-to-project@main           with:             project-url: https://github.com/users/username/projects/1             github-token: ${{ secrets.GITHUB_TOKEN }}   ```yaml</p> </li> </ul>"},{"location":"04-Collaboration/04-Projects/#8-team-collaboration","title":"8. Team Collaboration","text":""},{"location":"04-Collaboration/04-Projects/#81-access-control","title":"8.1. Access Control","text":"<p>Permission Levels:</p> <ul> <li>Read: View project contents</li> <li>Write: Edit project items</li> <li>Admin: Manage project settings</li> <li>No access: Cannot view project</li> </ul> <p>Team Assignment:</p> <ul> <li>Assign teams to projects</li> <li>Individual user permissions</li> <li>Role-based access control</li> </ul>"},{"location":"04-Collaboration/04-Projects/#82-collaboration-features","title":"8.2. Collaboration Features","text":"<p>Comments and Discussions:</p> <ul> <li>Comment on project items</li> <li>@mention team members</li> <li>Link to related discussions</li> <li>Update progress and blockers</li> </ul> <p>Notifications:</p> <ul> <li>Project activity updates</li> <li>Assignment notifications</li> <li>Mention alerts</li> <li>Custom notification rules</li> </ul>"},{"location":"04-Collaboration/04-Projects/#83-project-templates","title":"8.3. Project Templates","text":"<p>Agile Sprint Board:</p> <pre><code>Columns:\n- Product Backlog\n- Sprint Backlog  \n- In Progress\n- Code Review\n- Testing\n- Done\n</code></pre> <p>Feature Development:</p> <pre><code>Columns:\n- Ideas\n- Planned\n- Design\n- Development\n- Review\n- Released\n</code></pre> <p>Bug Triage:</p> <pre><code>Columns:\n- Reported\n- Triaged\n- Assigned\n- In Progress\n- Fixed\n- Verified\n</code></pre>"},{"location":"04-Collaboration/04-Projects/#9-integration-with-development-workflow","title":"9. Integration with Development Workflow","text":""},{"location":"04-Collaboration/04-Projects/#91-linking-issues-and-prs","title":"9.1. Linking Issues and PRs","text":"<p>Issue References:</p> <ul> <li>Link issues to project items</li> <li>Automatic status updates</li> <li>Progress tracking</li> <li>Completion metrics</li> </ul> <p>Pull Request Integration:</p> <ul> <li>Link PRs to project items</li> <li>Track code review progress</li> <li>Merge status updates</li> <li>Deployment tracking</li> </ul>"},{"location":"04-Collaboration/04-Projects/#92-branch-and-release-management","title":"9.2. Branch and Release Management","text":"<p>Feature Branches:</p> <ul> <li>Create branches from project items</li> <li>Link development work</li> <li>Track feature progress</li> <li>Merge coordination</li> </ul> <p>Release Planning:</p> <ul> <li>Group items by release</li> <li>Track completion status</li> <li>Identify blockers</li> <li>Coordinate launches</li> </ul>"},{"location":"04-Collaboration/04-Projects/#93-cicd-integration","title":"9.3. CI/CD Integration","text":"<p>Deployment Tracking:</p> <ul> <li>Link deployments to features</li> <li>Track release status</li> <li>Monitor production issues</li> <li>Rollback coordination</li> </ul>"},{"location":"04-Collaboration/04-Projects/#10-metrics-and-reporting","title":"10. Metrics and Reporting","text":""},{"location":"04-Collaboration/04-Projects/#101-project-insights","title":"10.1. Project Insights","text":"<p>Built-in Metrics:</p> <ul> <li>Velocity: Completion rate over time</li> <li>Burndown: Remaining work visualization</li> <li>Cycle time: Time from start to completion</li> <li>Throughput: Items completed per period</li> </ul> <p>Custom Reporting:</p> <ul> <li>Export project data</li> <li>Create custom dashboards</li> <li>Track team performance</li> <li>Identify bottlenecks</li> </ul>"},{"location":"04-Collaboration/04-Projects/#102-performance-analysis","title":"10.2. Performance Analysis","text":"<p>Team Productivity:</p> <ul> <li>Items completed per team member</li> <li>Average cycle time</li> <li>Work distribution</li> <li>Capacity planning</li> </ul> <p>Process Improvement:</p> <ul> <li>Identify workflow bottlenecks</li> <li>Optimize column limits</li> <li>Reduce cycle time</li> <li>Improve predictability</li> </ul>"},{"location":"04-Collaboration/04-Projects/#11-advanced-features","title":"11. Advanced Features","text":""},{"location":"04-Collaboration/04-Projects/#111-multi-project-views","title":"11.1. Multi-Project Views","text":"<p>Organization Dashboard:</p> <ul> <li>View across all projects</li> <li>Filter by team or repository</li> <li>Track organizational goals</li> <li>Resource allocation</li> </ul> <p>Portfolio Management:</p> <ul> <li>Group related projects</li> <li>Track strategic initiatives</li> <li>Cross-project dependencies</li> <li>Executive reporting</li> </ul>"},{"location":"04-Collaboration/04-Projects/#112-api-and-integrations","title":"11.2. API and Integrations","text":"<p>GitHub API:</p> <ul> <li>Programmatic project management</li> <li>Custom integrations</li> <li>Data synchronization</li> <li>Automated reporting</li> </ul> <p>Third-party Tools:</p> <ul> <li>Slack notifications</li> <li>Jira synchronization</li> <li>Time tracking integration</li> <li>Analytics platforms</li> </ul>"},{"location":"04-Collaboration/04-Projects/#12-best-practices","title":"12. Best Practices","text":"<p>Project Management Best Practices</p> <p>Organization</p> <ul> <li>Use consistent naming conventions</li> <li>Create clear column definitions</li> <li>Implement work-in-progress limits</li> <li>Regular project maintenance</li> </ul> <p>Workflow</p> <ul> <li>Define clear process stages</li> <li>Automate repetitive tasks</li> <li>Link related items consistently</li> <li>Update status regularly</li> </ul> <p>Collaboration</p> <ul> <li>Assign ownership clearly</li> <li>Use comments for communication</li> <li>Tag relevant team members</li> <li>Share project visibility appropriately</li> </ul> <p>Measurement</p> <ul> <li>Track key metrics consistently</li> <li>Review and adjust process</li> <li>Identify improvement opportunities</li> <li>Celebrate team achievements</li> </ul>"},{"location":"04-Collaboration/04-Projects/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Create and configure GitHub Projects for different needs \u2003\u2003\u2705\u2003Use board, table, and roadmap views effectively \u2003\u2003\u2705\u2003Implement automation for workflow efficiency \u2003\u2003\u2705\u2003Collaborate with teams using project features \u2003\u2003\u2705\u2003Integrate projects with development workflows \u2003\u2003\u2705\u2003Track metrics and analyze project performance \u2003\u2003\u2705\u2003Apply best practices for project management  </p>"},{"location":"04-Collaboration/05-Teams/","title":"Teams &amp; Permissions","text":"<ul> <li>This guide covers team management and access control in GitHub organizations.</li> <li>You\u2019ll learn to create teams, manage permissions, and implement secure collaboration workflows.</li> </ul>"},{"location":"04-Collaboration/05-Teams/#1-teams-overview","title":"1. Teams Overview","text":"<p>Teams Benefits</p> <p>GitHub Teams provide structured access control and collaboration:</p> <ul> <li>Organized Access: Group users for repository permissions</li> <li>Scalable Management: Manage permissions at team level</li> <li>Communication: @mention entire teams in discussions</li> <li>Code Review: Assign teams as reviewers</li> <li>Visibility Control: Public or secret team visibility</li> <li>Nested Structure: Create parent-child team hierarchies</li> <li>Cross-Repository: Manage access across multiple repositories</li> <li>Audit Trail: Track team membership and permission changes</li> </ul>"},{"location":"04-Collaboration/05-Teams/#2-repository-permission-levels","title":"2. Repository Permission Levels","text":""},{"location":"04-Collaboration/05-Teams/#21-individual-permissions","title":"2.1. Individual Permissions","text":"<p>Read (Pull)</p> <ul> <li>View and clone repository</li> <li>Download releases and packages</li> <li>Open and comment on issues</li> <li>Submit pull requests</li> <li>View wiki pages</li> </ul> <p>Triage</p> <ul> <li>Read permissions, plus:</li> <li>Manage issues and pull requests</li> <li>Apply labels and assign users</li> <li>Close, reopen, and assign issues</li> <li>Request pull request reviews</li> </ul> <p>Write (Push)</p> <ul> <li>Triage permissions, plus:</li> <li>Push to repository branches</li> <li>Create, edit, and delete files</li> <li>Merge pull requests</li> <li>Manage wiki pages</li> <li>Edit repository description</li> </ul> <p>Maintain</p> <ul> <li>Write permissions, plus:</li> <li>Manage repository settings</li> <li>Add collaborators</li> <li>Manage branch protection rules</li> <li>Create and manage releases</li> </ul> <p>Admin</p> <ul> <li>All permissions, plus:</li> <li>Delete repository</li> <li>Manage security settings</li> <li>Transfer repository ownership</li> <li>Configure advanced security features</li> </ul>"},{"location":"04-Collaboration/05-Teams/#22-organization-permissions","title":"2.2. Organization Permissions","text":"<p>Outside Collaborators</p> <ul> <li>Not organization members</li> <li>Limited to specific repositories</li> <li>Cannot see organization teams</li> <li>Reduced metadata access</li> </ul> <p>Organization Members</p> <ul> <li>Basic organization membership</li> <li>Can see public teams</li> <li>Access to organization resources</li> <li>Default repository permissions</li> </ul> <p>Organization Owners</p> <ul> <li>Complete administrative access</li> <li>Manage all repositories</li> <li>Create and manage teams</li> <li>Configure organization settings</li> </ul>"},{"location":"04-Collaboration/05-Teams/#3-creating-and-managing-teams","title":"3. Creating and Managing Teams","text":""},{"location":"04-Collaboration/05-Teams/#31-team-creation","title":"3.1. Team Creation","text":"<ol> <li>Go to organization \u201cTeams\u201d tab</li> <li>Click \u201cNew team\u201d</li> <li>Configure team settings:</li> <li>Team name: Descriptive identifier</li> <li>Description: Team purpose and scope</li> <li>Visibility: Public or Secret</li> <li>Parent team: Optional hierarchy</li> </ol>"},{"location":"04-Collaboration/05-Teams/#32-team-visibility","title":"3.2. Team Visibility","text":"<p>Public Teams</p> <ul> <li>Visible to all organization members</li> <li>Members can be seen by everyone</li> <li>Suitable for open collaboration</li> <li>Default for most teams</li> </ul> <p>Secret Teams</p> <ul> <li>Only visible to team members</li> <li>Hidden from other organization members</li> <li>Used for sensitive projects</li> <li>Administrative or security teams</li> </ul>"},{"location":"04-Collaboration/05-Teams/#33-team-hierarchy","title":"3.3. Team Hierarchy","text":"<p>Parent Teams</p> <pre><code>Development Team (Parent)\n\u251c\u2500\u2500 Frontend Team\n\u251c\u2500\u2500 Backend Team\n\u251c\u2500\u2500 DevOps Team\n\u2514\u2500\u2500 QA Team\n</code></pre> <p>Benefits of Hierarchy</p> <ul> <li>Inherit parent team permissions</li> <li>Simplified permission management</li> <li>Organizational structure reflection</li> <li>Easier team coordination</li> </ul>"},{"location":"04-Collaboration/05-Teams/#4-repository-access-management","title":"4. Repository Access Management","text":""},{"location":"04-Collaboration/05-Teams/#41-team-repository-access","title":"4.1. Team Repository Access","text":"<p>Granting Access</p> <ol> <li>Navigate to repository \u201cSettings\u201d \u2192 \u201cManage access\u201d</li> <li>Click \u201cInvite teams or people\u201d</li> <li>Search for team name</li> <li>Select permission level</li> <li>Click \u201cAdd to repository\u201d</li> </ol> <p>Permission Levels</p> <ul> <li>Assign appropriate access level</li> <li>Consider principle of least privilege</li> <li>Regular permission audits</li> <li>Document access decisions</li> </ul>"},{"location":"04-Collaboration/05-Teams/#42-repository-settings","title":"4.2. Repository Settings","text":"<p>Default Permissions</p> <ul> <li>Set organization-wide defaults</li> <li>New repository inheritance</li> <li>Member base permissions</li> <li>Outside collaborator limits</li> </ul> <p>Repository Creation</p> <ul> <li>Control who can create repositories</li> <li>Limit repository types</li> <li>Naming conventions</li> <li>Default visibility settings</li> </ul>"},{"location":"04-Collaboration/05-Teams/#43-branch-protection","title":"4.3. Branch Protection","text":"<p>Team-Based Protection</p> <ul> <li>Require team reviews</li> <li>Dismiss stale team reviews</li> <li>Code owner review requirements</li> <li>Status check enforcement</li> </ul>"},{"location":"04-Collaboration/05-Teams/#5-advanced-team-features","title":"5. Advanced Team Features","text":""},{"location":"04-Collaboration/05-Teams/#51-code-review-assignment","title":"5.1. Code Review Assignment","text":"<p>Team Review Requests</p> <ul> <li>Automatically assign teams</li> <li>Round-robin assignment</li> <li>Load balancing algorithms</li> <li>Expertise-based assignment</li> </ul> <p>CODEOWNERS Integration</p> <pre><code># Team ownership patterns\n* @org/team-leads\n/frontend/ @org/frontend-team\n/backend/ @org/backend-team\n*.md @org/documentation-team\n</code></pre>"},{"location":"04-Collaboration/05-Teams/#52-team-synchronization","title":"5.2. Team Synchronization","text":"<p>LDAP Integration</p> <ul> <li>Sync with enterprise directory</li> <li>Automatic membership updates</li> <li>Group-based team creation</li> <li>Centralized user management</li> </ul> <p>SAML Integration</p> <ul> <li>Single sign-on authentication</li> <li>Team mapping from IdP</li> <li>Automated provisioning</li> <li>Security compliance</li> </ul>"},{"location":"04-Collaboration/05-Teams/#53-team-discussions","title":"5.3. Team Discussions","text":"<p>Communication Channels</p> <ul> <li>Team-specific discussions</li> <li>Private team conversations</li> <li>Announcements and updates</li> <li>Knowledge sharing</li> </ul>"},{"location":"04-Collaboration/05-Teams/#6-security-and-compliance","title":"6. Security and Compliance","text":""},{"location":"04-Collaboration/05-Teams/#61-access-reviews","title":"6.1. Access Reviews","text":"<p>Regular Audits</p> <ul> <li>Monthly access reviews</li> <li>Remove inactive members</li> <li>Validate team permissions</li> <li>Document access decisions</li> </ul> <p>Automated Monitoring</p> <ul> <li>Track permission changes</li> <li>Alert on suspicious activity</li> <li>Log access patterns</li> <li>Compliance reporting</li> </ul>"},{"location":"04-Collaboration/05-Teams/#62-security-policies","title":"6.2. Security Policies","text":"<p>Organization Security</p> <ul> <li>Two-factor authentication requirements</li> <li>IP address restrictions</li> <li>SSH key management</li> <li>App access policies</li> </ul> <p>Repository Security</p> <ul> <li>Branch protection rules</li> <li>Required status checks</li> <li>Vulnerability scanning</li> <li>Dependency management</li> </ul>"},{"location":"04-Collaboration/05-Teams/#63-compliance-management","title":"6.3. Compliance Management","text":"<p>Audit Logs</p> <ul> <li>Access permission changes</li> <li>Team membership modifications</li> <li>Repository setting updates</li> <li>Security event tracking</li> </ul> <p>Data Protection</p> <ul> <li>Personal data handling</li> <li>Export controls compliance</li> <li>Geographic restrictions</li> <li>Privacy policy adherence</li> </ul>"},{"location":"04-Collaboration/05-Teams/#7-best-practices","title":"7. Best Practices","text":"<p>Team Management Best Practices</p> <p>Organization</p> <ul> <li>Use clear, descriptive team names</li> <li>Document team purposes and responsibilities</li> <li>Create logical team hierarchies</li> <li>Regular team structure reviews</li> </ul> <p>Security</p> <ul> <li>Follow principle of least privilege</li> <li>Regular access audits</li> <li>Enable two-factor authentication</li> <li>Monitor team membership changes</li> </ul> <p>Collaboration</p> <ul> <li>Use teams for code review assignments</li> <li>Implement CODEOWNERS patterns</li> <li>Foster team communication</li> <li>Share knowledge across teams</li> </ul> <p>Governance</p> <ul> <li>Establish team creation policies</li> <li>Document permission standards</li> <li>Implement approval workflows</li> <li>Maintain compliance records</li> </ul>"},{"location":"04-Collaboration/05-Teams/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Create and configure GitHub teams effectively \u2003\u2003\u2705\u2003Manage repository permissions and access control \u2003\u2003\u2705\u2003Implement team hierarchies and organization \u2003\u2003\u2705\u2003Use teams for code review and collaboration \u2003\u2003\u2705\u2003Apply security best practices and compliance \u2003\u2003\u2705\u2003Monitor and audit team access regularly  </p>"},{"location":"04-Collaboration/06-Notifications/","title":"Notifications Management","text":"<ul> <li>This guide covers GitHub notification settings and management strategies.</li> <li>You\u2019ll learn to configure, filter, and optimize notifications for productivity.</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#1-notifications-overview","title":"1. Notifications Overview","text":"<p>Notification Benefits</p> <p>GitHub notifications keep you informed about repository activity:</p> <ul> <li>Stay Updated: Track changes across repositories</li> <li>Collaboration: Know when your input is needed</li> <li>Mentions: Receive direct communications</li> <li>Review Requests: Get notified of code review assignments</li> <li>Issue Updates: Follow discussions and resolutions</li> <li>Security Alerts: Important security notifications</li> <li>Custom Control: Granular notification preferences</li> <li>Multiple Channels: Email, web, and mobile notifications</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#2-notification-types","title":"2. Notification Types","text":""},{"location":"04-Collaboration/06-Notifications/#21-participating-notifications","title":"2.1. Participating Notifications","text":"<p>Direct Involvement</p> <ul> <li>Issues or PRs you created</li> <li>Comments you made</li> <li>@mentions of your username</li> <li>Review requests for you</li> <li>Team @mentions you\u2019re part of</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#22-watching-notifications","title":"2.2. Watching Notifications","text":"<p>Repository Activity</p> <ul> <li>All issues and pull requests</li> <li>New releases</li> <li>Discussions activity</li> <li>Wiki changes</li> <li>Repository security alerts</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#23-security-notifications","title":"2.3. Security Notifications","text":"<p>Important Alerts</p> <ul> <li>Dependency vulnerabilities</li> <li>Secret scanning alerts</li> <li>Code scanning findings</li> <li>Security policy violations</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#3-global-notification-settings","title":"3. Global Notification Settings","text":""},{"location":"04-Collaboration/06-Notifications/#31-accessing-settings","title":"3.1. Accessing Settings","text":"<ol> <li>Go to GitHub \u201cSettings\u201d (user settings)</li> <li>Click \u201cNotifications\u201d in sidebar</li> <li>Configure global preferences</li> </ol>"},{"location":"04-Collaboration/06-Notifications/#32-email-notifications","title":"3.2. Email Notifications","text":"<p>Email Preferences</p> <ul> <li>Participating: Only when directly involved</li> <li>Watching: All activity for watched repositories</li> <li>Custom: Select specific notification types</li> </ul> <p>Email Types</p> <ul> <li>Comments on issues and pull requests</li> <li>Pull request reviews</li> <li>Pull request pushes</li> <li>Security alerts</li> <li>Workflow runs</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#33-web-notifications","title":"3.3. Web Notifications","text":"<p>Browser Settings</p> <ul> <li>Enable web notifications</li> <li>Notification permission requests</li> <li>Sound preferences</li> <li>Display duration</li> </ul> <p>Notification Center</p> <ul> <li>Access via bell icon</li> <li>Mark as read/unread</li> <li>Filter by repository</li> <li>Bulk actions</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#4-repository-specific-settings","title":"4. Repository-Specific Settings","text":""},{"location":"04-Collaboration/06-Notifications/#41-watch-settings","title":"4.1. Watch Settings","text":"<p>Watch Options</p> <ol> <li>On repository page, click \u201cWatch\u201d button</li> <li>Choose notification level:</li> <li>Participating and @mentions: Minimal notifications</li> <li>All Activity: Every change and discussion</li> <li>Ignore: No notifications</li> <li>Custom: Select specific events</li> </ol>"},{"location":"04-Collaboration/06-Notifications/#42-custom-watch-settings","title":"4.2. Custom Watch Settings","text":"<p>Selective Notifications</p> <ul> <li>Issues: New issues and comments</li> <li>Pull requests: New PRs and reviews</li> <li>Releases: New releases only</li> <li>Discussions: Community conversations</li> <li>Security alerts: Vulnerability notifications</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#43-repository-notification-override","title":"4.3. Repository Notification Override","text":"<p>Issue/PR Level Control</p> <ul> <li>Subscribe: Get notifications for specific items</li> <li>Unsubscribe: Stop notifications for specific items</li> <li>Automatic subscription: When participating</li> <li>Manual control: Override default settings</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#5-managing-notification-volume","title":"5. Managing Notification Volume","text":""},{"location":"04-Collaboration/06-Notifications/#51-email-filtering","title":"5.1. Email Filtering","text":"<p>Gmail Filters</p> <pre><code>from:(notifications@github.com)\nsubject:(includes repository name)\nlabel:GitHub-Notifications\n</code></pre> <p>Outlook Rules</p> <ul> <li>Filter by sender domain</li> <li>Sort by repository</li> <li>Auto-archive read notifications</li> <li>Priority inbox setup</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#52-notification-strategies","title":"5.2. Notification Strategies","text":"<p>High-Priority Notifications</p> <ul> <li>Direct @mentions</li> <li>Review requests</li> <li>Security alerts</li> <li>CI/CD failures</li> </ul> <p>Low-Priority Notifications</p> <ul> <li>General repository activity</li> <li>Issue comments (not participating)</li> <li>Wiki changes</li> <li>Release announcements</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#53-batching-and-scheduling","title":"5.3. Batching and Scheduling","text":"<p>Email Batching</p> <ul> <li>Receive summary emails</li> <li>Reduce notification frequency</li> <li>Combine related notifications</li> <li>Schedule delivery times</li> </ul> <p>Quiet Hours</p> <ul> <li>Disable notifications during off-hours</li> <li>Weekend notification preferences</li> <li>Time zone considerations</li> <li>Emergency override settings</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#6-team-notification-management","title":"6. Team Notification Management","text":""},{"location":"04-Collaboration/06-Notifications/#61-team-mentions","title":"6.1. Team @mentions","text":"<p>Team Notification Settings</p> <ul> <li>Configure team-wide @mention policies</li> <li>Distribute notifications among team members</li> <li>Avoid notification spam</li> <li>Rotate responsibility</li> </ul> <p>Team Communication</p> <ul> <li>Use team discussions</li> <li>Coordinate notification preferences</li> <li>Share important updates</li> <li>Establish communication protocols</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#62-code-review-notifications","title":"6.2. Code Review Notifications","text":"<p>Review Assignment</p> <ul> <li>Automatic reviewer assignment</li> <li>Team rotation strategies</li> <li>Load balancing</li> <li>Expertise-based assignment</li> </ul> <p>Review Process</p> <ul> <li>Request review notifications</li> <li>Review completion alerts</li> <li>Changes requested follow-up</li> <li>Approval confirmations</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#63-project-notifications","title":"6.3. Project Notifications","text":"<p>Project Updates</p> <ul> <li>Issue assignments</li> <li>Status changes</li> <li>Milestone progress</li> <li>Project completion</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#7-mobile-notifications","title":"7. Mobile Notifications","text":""},{"location":"04-Collaboration/06-Notifications/#71-github-mobile-app","title":"7.1. GitHub Mobile App","text":"<p>Push Notifications</p> <ul> <li>Install GitHub mobile app</li> <li>Configure push preferences</li> <li>Sync with web settings</li> <li>Real-time updates</li> </ul> <p>Mobile-Specific Settings</p> <ul> <li>Reduce notification frequency</li> <li>Critical alerts only</li> <li>Battery optimization</li> <li>Data usage considerations</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#72-third-party-integration","title":"7.2. Third-Party Integration","text":"<p>Slack Integration</p> <pre><code>/github subscribe owner/repository\n/github subscribe owner/repository issues,pulls,releases\n</code></pre> <p>Discord Integration</p> <ul> <li>Webhook notifications</li> <li>Channel-specific updates</li> <li>Bot configuration</li> <li>Custom message formatting</li> </ul> <p>Microsoft Teams</p> <ul> <li>GitHub app for Teams</li> <li>Channel notifications</li> <li>Card formatting</li> <li>Action buttons</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#8-notification-automation","title":"8. Notification Automation","text":""},{"location":"04-Collaboration/06-Notifications/#81-github-actions-for-notifications","title":"8.1. GitHub Actions for Notifications","text":"<p>Custom Notification Workflows</p> <pre><code>name: Custom Notifications\non:\n  issues:\n    types: [opened, labeled]\n  pull_request:\n    types: [opened, ready_for_review]\n\njobs:\n  notify:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Send Slack notification\n        uses: rtCamp/action-slack-notify@v2\n        env:\n          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}\n          SLACK_MESSAGE: 'New issue opened: ${{ github.event.issue.title }}'\n</code></pre>"},{"location":"04-Collaboration/06-Notifications/#82-conditional-notifications","title":"8.2. Conditional Notifications","text":"<p>Smart Filtering</p> <ul> <li>Priority-based notifications</li> <li>Label-based routing</li> <li>Team-specific alerts</li> <li>Time-sensitive notifications</li> </ul> <p>Escalation Rules</p> <ul> <li>Unresponded notifications</li> <li>Critical issue alerts</li> <li>Security vulnerability escalation</li> <li>Deadline reminders</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#9-notification-analytics","title":"9. Notification Analytics","text":""},{"location":"04-Collaboration/06-Notifications/#91-tracking-effectiveness","title":"9.1. Tracking Effectiveness","text":"<p>Metrics to Monitor</p> <ul> <li>Notification open rates</li> <li>Response times</li> <li>Action completion rates</li> <li>Notification volume trends</li> </ul> <p>Optimization Strategies</p> <ul> <li>Reduce noise</li> <li>Improve relevance</li> <li>Optimize timing</li> <li>Personalize content</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#92-team-communication-health","title":"9.2. Team Communication Health","text":"<p>Communication Metrics</p> <ul> <li>Team response times</li> <li>Cross-team collaboration</li> <li>Information sharing effectiveness</li> <li>Notification fatigue indicators</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#10-troubleshooting","title":"10. Troubleshooting","text":""},{"location":"04-Collaboration/06-Notifications/#101-common-issues","title":"10.1. Common Issues","text":"<p>Missing Notifications</p> <ul> <li>Check repository watch settings</li> <li>Verify email notification preferences</li> <li>Ensure GitHub emails aren\u2019t in spam</li> <li>Confirm notification routing rules</li> </ul> <p>Too Many Notifications</p> <ul> <li>Unwatch unnecessary repositories</li> <li>Customize notification types</li> <li>Use email filters effectively</li> <li>Adjust team @mention settings</li> </ul> <p>Delayed Notifications</p> <ul> <li>Check email provider delays</li> <li>Verify webhook configurations</li> <li>Monitor GitHub status</li> <li>Test notification delivery</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#102-best-practices-for-troubleshooting","title":"10.2. Best Practices for Troubleshooting","text":"<p>Systematic Approach</p> <ol> <li>Identify notification source</li> <li>Check repository settings</li> <li>Verify global preferences</li> <li>Test with simple actions</li> <li>Contact support if needed</li> </ol>"},{"location":"04-Collaboration/06-Notifications/#11-best-practices","title":"11. Best Practices","text":"<p>Notification Best Practices</p> <p>Optimization</p> <p>Optimization</p> <ul> <li>Use custom watch settings for different repositories</li> <li>Set up email filters for organization</li> <li>Minimize notification fatigue</li> <li>Regular cleanup of subscriptions</li> </ul> <p>Team Coordination</p> <ul> <li>Establish team @mention guidelines</li> <li>Share notification strategies</li> <li>Coordinate important announcements</li> <li>Use appropriate urgency levels</li> </ul> <p>Productivity</p> <ul> <li>Batch check notifications</li> <li>Use mobile for urgent items only</li> <li>Leverage automation for routing</li> <li>Regular notification audit</li> </ul> <p>Security</p> <ul> <li>Never ignore security notifications</li> <li>Set up immediate alerts for vulnerabilities</li> <li>Monitor dependency updates</li> <li>Configure escalation for critical issues</li> </ul>"},{"location":"04-Collaboration/06-Notifications/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Configure global and repository-specific notification settings \u2003\u2003\u2705\u2003Manage notification volume and reduce noise \u2003\u2003\u2705\u2003Set up email filtering and organization systems \u2003\u2003\u2705\u2003Use mobile and third-party integrations effectively \u2003\u2003\u2705\u2003Implement team notification strategies \u2003\u2003\u2705\u2003Troubleshoot common notification issues  </p>"},{"location":"04-Collaboration/07-Advanced/","title":"Advanced Collaboration Features","text":"<ul> <li>This guide covers advanced GitHub collaboration features including CODEOWNERS, automation, and integrations.</li> <li>You\u2019ll learn to implement sophisticated workflows for large teams and complex projects.</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#1-codeowners-file","title":"1. CODEOWNERS File","text":"<p>CODEOWNERS Benefits</p> <p>CODEOWNERS provides automated code review assignment:</p> <ul> <li>Automatic Reviews: Auto-assign reviewers based on file paths</li> <li>Expertise Routing: Direct changes to subject matter experts</li> <li>Consistent Process: Ensure proper review coverage</li> <li>Compliance: Meet regulatory review requirements</li> <li>Team Scalability: Distribute review workload effectively</li> <li>Quality Assurance: Maintain code quality standards</li> <li>Knowledge Sharing: Spread domain knowledge across teams</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#2-codeowners-configuration","title":"2. CODEOWNERS Configuration","text":""},{"location":"04-Collaboration/07-Advanced/#21-file-location-and-setup","title":"2.1. File Location and Setup","text":"<p>Create <code>.github/CODEOWNERS</code> in your repository:</p> <pre><code># Global owners - applies to everything unless overridden\n* @organization/team-leads @senior-developer\n\n# Frontend code\n/src/frontend/ @organization/frontend-team\n/src/components/ @organization/ui-team\n*.css @organization/frontend-team\n*.scss @organization/frontend-team\n*.js @organization/frontend-team\n*.jsx @organization/frontend-team\n*.ts @organization/frontend-team\n*.tsx @organization/frontend-team\n\n# Backend code\n/src/backend/ @organization/backend-team\n/src/api/ @organization/api-team\n*.py @organization/backend-team\n*.java @organization/backend-team\n*.go @organization/backend-team\n\n# Database\n/migrations/ @organization/database-team\n/sql/ @organization/database-team\n*.sql @organization/database-team\n\n# Infrastructure and DevOps\n/.github/ @organization/devops-team\n/docker/ @organization/devops-team\n/k8s/ @organization/devops-team\n*.yml @organization/devops-team\n*.yaml @organization/devops-team\nDockerfile @organization/devops-team\n\n# Documentation\n/docs/ @organization/documentation-team\n*.md @organization/documentation-team\nREADME* @organization/documentation-team\n\n# Configuration files\npackage.json @organization/frontend-team @organization/devops-team\nrequirements.txt @organization/backend-team\nGemfile @organization/backend-team\n\n# Security sensitive files\n/security/ @organization/security-team\n/.github/workflows/ @organization/devops-team @organization/security-team\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#22-pattern-matching-rules","title":"2.2. Pattern Matching Rules","text":"<p>Path Patterns</p> <ul> <li><code>/path/</code>: Matches directory and subdirectories</li> <li><code>*.ext</code>: Matches all files with extension</li> <li><code>path/*.ext</code>: Matches files in specific directory</li> <li><code>**/pattern</code>: Matches pattern anywhere in tree</li> </ul> <p>Priority Rules</p> <ul> <li>Last matching pattern takes precedence</li> <li>More specific patterns override general ones</li> <li>Order matters in the file</li> <li>Global patterns should come first</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#23-owner-specification","title":"2.3. Owner Specification","text":"<p>Individual Users</p> <pre><code># Username-based ownership\n/frontend/ @alice @bob\n/backend/ @charlie\n</code></pre> <p>Teams</p> <pre><code># Team-based ownership (recommended)\n/frontend/ @organization/frontend-team\n/backend/ @organization/backend-team\n</code></pre> <p>Email Addresses</p> <pre><code># For external reviewers (not recommended)\n/legal/ legal@company.com\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#3-branch-protection-integration","title":"3. Branch Protection Integration","text":""},{"location":"04-Collaboration/07-Advanced/#31-required-reviews-from-codeowners","title":"3.1. Required Reviews from CODEOWNERS","text":"<ol> <li>Go to repository \u201cSettings\u201d \u2192 \u201cBranches\u201d</li> <li>Add or edit branch protection rule</li> <li>Enable \u201cRequire a pull request before merging\u201d</li> <li>Check \u201cRequire review from CODEOWNERS\u201d</li> <li>Configure additional settings:<ul> <li>Dismiss stale reviews when new commits are pushed</li> <li>Require review from administrators</li> <li>Allow specified actors to bypass</li> </ul> </li> </ol>"},{"location":"04-Collaboration/07-Advanced/#32-review-assignment-automation","title":"3.2. Review Assignment Automation","text":"<p>Automatic Assignment</p> <ul> <li>GitHub automatically requests reviews from CODEOWNERS</li> <li>Assignment happens when PR is created</li> <li>Updates when files are added/removed</li> <li>Respects team and individual settings</li> </ul> <p>Load Balancing</p> <ul> <li>Use teams for better distribution</li> <li>GitHub rotates assignments within teams</li> <li>Consider team size and availability</li> <li>Monitor review workload distribution</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#4-advanced-automation","title":"4. Advanced Automation","text":""},{"location":"04-Collaboration/07-Advanced/#41-github-actions-integration","title":"4.1. GitHub Actions Integration","text":"<p>Auto-assign Based on Labels</p> <pre><code>name: Auto-assign reviewers\non:\n  pull_request:\n    types: [opened, labeled]\n\njobs:\n  assign-reviewers:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/github-script@v6\n        with:\n          script: |\n            const { data: pr } = await github.rest.pulls.get({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              pull_number: context.issue.number\n            });\n\n            if (pr.labels.some(label =&gt; label.name === 'urgent')) {\n              await github.rest.pulls.requestReviewers({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                pull_number: context.issue.number,\n                reviewers: ['senior-dev1', 'senior-dev2']\n              });\n            }\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#42-conditional-codeowners","title":"4.2. Conditional CODEOWNERS","text":"<p>Environment-Specific Owners</p> <pre><code># Production-critical files need extra review\n/src/config/production.yml @organization/senior-team @organization/security-team\n\n# Development files can have relaxed ownership\n/src/config/development.yml @organization/backend-team\n</code></pre> <p>Feature-Based Ownership</p> <pre><code># Payment processing requires security review\n/src/payments/ @organization/backend-team @organization/security-team @organization/compliance-team\n\n# User interface changes need UX review\n/src/ui/ @organization/frontend-team @organization/ux-team\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#43-dynamic-owner-assignment","title":"4.3. Dynamic Owner Assignment","text":"<p>Context-Aware Assignment</p> <pre><code>name: Dynamic CODEOWNERS\non:\n  pull_request:\n    types: [opened]\n\njobs:\n  assign-owners:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Determine reviewers\n        run: |\n          # Custom logic to assign reviewers based on:\n          # - Time of day\n          # - Current workload\n          # - Expertise areas\n          # - Availability status\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#5-collaboration-workflows","title":"5. Collaboration Workflows","text":""},{"location":"04-Collaboration/07-Advanced/#51-cross-team-review-process","title":"5.1. Cross-Team Review Process","text":"<p>Multi-Team Coordination</p> <ol> <li>Primary Review: Domain expert team</li> <li>Secondary Review: Cross-functional perspectives</li> <li>Final Approval: Senior team member</li> <li>Security Review: For sensitive changes</li> </ol> <p>Workflow Example</p> <pre><code># Three-tier review for critical components\n/src/core/ @organization/core-team @organization/senior-team @organization/security-team\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#52-escalation-procedures","title":"5.2. Escalation Procedures","text":"<p>Review Escalation</p> <ul> <li>24-hour rule: Escalate if no response</li> <li>Weekend coverage: Designated on-call reviewers</li> <li>Emergency changes: Fast-track approval process</li> <li>Blocked PRs: Automatic reassignment</li> </ul> <p>Automation for Escalation</p> <pre><code>name: Review Escalation\non:\n  schedule:\n    - cron: '0 9 * * *'  # Daily at 9 AM\n\njobs:\n  check-stale-reviews:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Find stale PRs\n        run: |\n          # Find PRs waiting for review &gt; 24 hours\n          # Reassign or escalate as needed\n          # Notify team leads\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#53-quality-gates","title":"5.3. Quality Gates","text":"<p>Mandatory Checks</p> <ul> <li>All CODEOWNERS must approve</li> <li>Automated tests must pass</li> <li>Security scans must complete</li> <li>Documentation must be updated</li> </ul> <p>Progressive Enhancement</p> <pre><code># Junior developers need mentor review\n* @organization/junior-devs @organization/mentors\n\n# Senior developers can self-approve minor changes\n/docs/ @organization/senior-devs\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#6-monitoring-and-analytics","title":"6. Monitoring and Analytics","text":""},{"location":"04-Collaboration/07-Advanced/#61-review-metrics","title":"6.1. Review Metrics","text":"<p>Key Performance Indicators</p> <ul> <li>Average review time by team</li> <li>Review coverage percentage</li> <li>Reviewer workload distribution</li> <li>Pull request approval rates</li> </ul> <p>Tracking Implementation</p> <pre><code>name: Review Analytics\non:\n  pull_request_review:\n    types: [submitted]\n\njobs:\n  track-metrics:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Record review data\n        run: |\n          # Track review time\n          # Record reviewer assignment\n          # Update team metrics\n          # Generate reports\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#62-team-performance-analysis","title":"6.2. Team Performance Analysis","text":"<p>Review Quality Metrics</p> <ul> <li>Defect detection rate</li> <li>Review thoroughness</li> <li>Knowledge transfer effectiveness</li> <li>Team collaboration index</li> </ul> <p>Improvement Strategies</p> <ul> <li>Identify bottlenecks</li> <li>Balance workload</li> <li>Optimize assignment algorithms</li> <li>Enhance review guidelines</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#7-integration-ecosystem","title":"7. Integration Ecosystem","text":""},{"location":"04-Collaboration/07-Advanced/#71-external-tool-integration","title":"7.1. External Tool Integration","text":"<p>Slack Integration</p> <pre><code># .github/workflows/slack-notify.yml\nname: Slack Review Notifications\non:\n  pull_request:\n    types: [review_requested]\n\njobs:\n  notify:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Slack Notification\n        uses: rtCamp/action-slack-notify@v2\n        env:\n          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}\n          SLACK_CHANNEL: 'dev-reviews'\n          SLACK_MESSAGE: 'Review requested for PR: ${{ github.event.pull_request.title }}'\n</code></pre> <p>JIRA Integration</p> <ul> <li>Link PRs to JIRA tickets</li> <li>Update ticket status on review completion</li> <li>Track review requirements in JIRA</li> <li>Generate compliance reports</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#72-custom-review-tools","title":"7.2. Custom Review Tools","text":"<p>Review Assignment Logic</p> <pre><code># Custom reviewer assignment based on:\n# - Code complexity analysis\n# - Historical expertise\n# - Current workload\n# - Time zone considerations\n</code></pre> <p>Review Quality Tools</p> <ul> <li>Automated review quality scoring</li> <li>Review completeness checking</li> <li>Follow-up task generation</li> <li>Knowledge base integration</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#8-security-and-compliance","title":"8. Security and Compliance","text":""},{"location":"04-Collaboration/07-Advanced/#81-compliance-requirements","title":"8.1. Compliance Requirements","text":"<p>Regulatory Review</p> <pre><code># SOX compliance - financial code requires multiple approvals\n/src/financial/ @organization/financial-team @organization/compliance-team @organization/audit-team\n\n# HIPAA compliance - healthcare data handling\n/src/patient-data/ @organization/healthcare-team @organization/privacy-team\n\n# PCI compliance - payment processing\n/src/payments/ @organization/payments-team @organization/security-team\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#82-audit-trail","title":"8.2. Audit Trail","text":"<p>Review Documentation</p> <ul> <li>Complete review history</li> <li>Approval reasoning</li> <li>Change justification</li> <li>Compliance verification</li> </ul> <p>Automated Compliance Checking</p> <pre><code>name: Compliance Check\non:\n  pull_request:\n    types: [opened, synchronize]\n\njobs:\n  compliance:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check required approvals\n        run: |\n          # Verify all required approvals are present\n          # Check for compliance violations\n          # Generate audit logs\n</code></pre>"},{"location":"04-Collaboration/07-Advanced/#9-best-practices","title":"9. Best Practices","text":"<p>Advanced Collaboration Best Practices</p> <p>CODEOWNERS Management</p> <ul> <li>Regular review and updates of ownership patterns</li> <li>Clear documentation of ownership rationale</li> <li>Backup reviewers for each area</li> <li>Load balancing across team members</li> </ul> <p>Automation Strategy</p> <ul> <li>Gradual implementation of automation</li> <li>Clear escalation procedures</li> <li>Monitoring and alerting for failures</li> <li>Regular review of automation effectiveness</li> </ul> <p>Team Coordination</p> <ul> <li>Cross-team communication protocols</li> <li>Shared understanding of review standards</li> <li>Regular team sync on review processes</li> <li>Continuous improvement mindset</li> </ul> <p>Quality Assurance</p> <ul> <li>Consistent review quality standards</li> <li>Knowledge sharing across teams</li> <li>Mentoring junior reviewers</li> <li>Regular process retrospectives</li> </ul>"},{"location":"04-Collaboration/07-Advanced/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Configure and maintain CODEOWNERS for automated review assignment \u2003\u2003\u2705\u2003Implement advanced automation workflows for collaboration \u2003\u2003\u2705\u2003Set up cross-team review processes and quality gates \u2003\u2003\u2705\u2003Monitor and analyze collaboration effectiveness \u2003\u2003\u2705\u2003Integrate with external tools and compliance systems \u2003\u2003\u2705\u2003Apply sophisticated collaboration strategies for large teams  </p>"},{"location":"04-Collaboration/08-GitHub-Pages/","title":"GitHub Pages","text":"<ul> <li>This guide covers GitHub Pages for hosting documentation, project websites, and portfolios directly from your repository.</li> <li>You\u2019ll learn to set up, configure, and deploy static websites using GitHub\u2019s free hosting service.</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#1-github-pages-overview","title":"1. GitHub Pages Overview","text":"<p>GitHub Pages Benefits</p> <p>GitHub Pages provides free static website hosting with powerful features:</p> <ul> <li>Free Hosting: Host static websites at no cost</li> <li>Custom Domains: Use your own domain name</li> <li>HTTPS Support: Automatic SSL certificates</li> <li>Jekyll Integration: Built-in static site generator</li> <li>Automatic Deployment: Deploy from repository pushes</li> <li>Version Control: Full Git history for your website</li> <li>Collaborative Editing: Team editing with pull requests</li> <li>CDN Distribution: Fast global content delivery</li> <li>No Server Management: Fully managed hosting solution</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#2-types-of-github-pages-sites","title":"2. Types of GitHub Pages Sites","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#21-userorganization-pages","title":"2.1. User/Organization Pages","text":"<p>URL Pattern: <code>https://username.github.io</code></p> <ul> <li>One per GitHub account</li> <li>Repository must be named <code>username.github.io</code></li> <li>Deploys from <code>main</code> branch by default</li> <li>Perfect for personal portfolios or organization homepages</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#22-project-pages","title":"2.2. Project Pages","text":"<p>URL Pattern: <code>https://username.github.io/repository-name</code></p> <ul> <li>One per repository</li> <li>Can use any repository name</li> <li>Multiple deployment sources available</li> <li>Ideal for project documentation and demos</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#23-github-enterprise","title":"2.3. GitHub Enterprise","text":"<p>URL Pattern: <code>https://pages.github-enterprise.com/username/repository</code></p> <ul> <li>Available for GitHub Enterprise users</li> <li>Custom domain configuration</li> <li>Enhanced security features</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#3-setting-up-github-pages","title":"3. Setting Up GitHub Pages","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#31-quick-setup-simple-html","title":"3.1. Quick Setup (Simple HTML)","text":"<ol> <li>Create Repository: Create or use existing repository</li> <li>Add HTML Files: Add <code>index.html</code> and other web files</li> <li> <p>Enable Pages:</p> <ul> <li>Go to repository \u201cSettings\u201d</li> <li>Scroll to \u201cPages\u201d section</li> <li>Select source: \u201cDeploy from a branch\u201d</li> <li>Choose branch: \u201cmain\u201d or \u201cgh-pages\u201d</li> <li>Select folder: \u201d/ (root)\u201d or \u201c/docs\u201d</li> <li>Click \u201cSave\u201d</li> </ul> </li> <li> <p>Access Site: Visit <code>https://username.github.io/repository-name</code></p> </li> </ol>"},{"location":"04-Collaboration/08-GitHub-Pages/#32-basic-html-example","title":"3.2. Basic HTML Example","text":"<ul> <li> <p>Create a simple <code>index.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;My Project&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Welcome to My Project&lt;/h1&gt;\n        &lt;nav&gt;\n            &lt;a href=\"#features\"&gt;Features&lt;/a&gt;\n            &lt;a href=\"#docs\"&gt;Documentation&lt;/a&gt;\n            &lt;a href=\"#contact\"&gt;Contact&lt;/a&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"features\"&gt;\n            &lt;h2&gt;Features&lt;/h2&gt;\n            &lt;p&gt;Description of your project features...&lt;/p&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"docs\"&gt;\n            &lt;h2&gt;Documentation&lt;/h2&gt;\n            &lt;p&gt;Link to your documentation...&lt;/p&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; 2025 Your Name. All rights reserved.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#33-directory-structure","title":"3.3. Directory Structure","text":"<p>Organize your pages site:</p> <pre><code>repository/\n\u251c\u2500\u2500 index.html          # Home page\n\u251c\u2500\u2500 about.html          # About page\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 index.html      # Documentation home\n\u2502   \u251c\u2500\u2500 guide.html      # User guide\n\u2502   \u2514\u2500\u2500 api.html        # API documentation\n\u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u2514\u2500\u2500 styles.css  # Stylesheets\n\u2502   \u251c\u2500\u2500 js/\n\u2502   \u2502   \u2514\u2500\u2500 script.js   # JavaScript files\n\u2502   \u2514\u2500\u2500 images/\n\u2502       \u2514\u2500\u2500 logo.png    # Images and media\n\u251c\u2500\u2500 _config.yml         # Jekyll configuration (if using Jekyll)\n\u2514\u2500\u2500 README.md           # Repository documentation\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#4-custom-domains","title":"4. Custom Domains","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#41-domain-configuration","title":"4.1. Domain Configuration","text":"<ol> <li>Purchase Domain: Buy a domain from a registrar</li> <li>Configure DNS: Set up DNS records</li> <li>Add to GitHub:</li> <li>Go to repository \u201cSettings\u201d \u2192 \u201cPages\u201d</li> <li>Add custom domain in \u201cCustom domain\u201d field</li> <li>Save settings</li> </ol>"},{"location":"04-Collaboration/08-GitHub-Pages/#42-dns-configuration","title":"4.2. DNS Configuration","text":"<p>For Apex Domain (example.com):</p> <p>Add A records pointing to GitHub Pages IP addresses:</p> <pre><code>A    @    185.199.108.153\nA    @    185.199.109.153\nA    @    185.199.110.153\nA    @    185.199.111.153\n</code></pre> <p>For Subdomain (www.example.com):</p> <p>Add CNAME record:</p> <pre><code>CNAME    www    username.github.io\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#43-https-and-security","title":"4.3. HTTPS and Security","text":"<ul> <li>Automatic HTTPS: Enabled by default for GitHub domains</li> <li>Custom Domain HTTPS: Available after domain verification</li> <li>Security Headers: Configure in Jekyll or HTML meta tags</li> <li>Content Security Policy: Implement for enhanced security</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#5-advanced-configuration","title":"5. Advanced Configuration","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#51-github-actions-for-pages","title":"5.1. GitHub Actions for Pages","text":"<ul> <li> <p>Use GitHub Actions for advanced deployment:</p> <p>```yaml name: Deploy Pages on:   push:     branches: [ main ]   pull_request:     branches: [ main ]</p> <p>permissions:   contents: read   pages: write   id-token: write</p> <p>concurrency:   group: \u201cpages\u201d   cancel-in-progress: true</p> <p>jobs:   build:     runs-on: ubuntu-latest     steps:       - name: Checkout         uses: actions/checkout@v4</p> <pre><code>  - name: Setup Node.js\n    uses: actions/setup-node@v4\n    with:\n      node-version: '18'\n\n  - name: Install dependencies\n    run: npm install\n\n  - name: Build site\n    run: npm run build\n\n  - name: Upload artifact\n    uses: actions/upload-pages-artifact@v2\n    with:\n      path: './dist'\n</code></pre> <p>deploy:     environment:       name: github-pages       url: ${{ steps.deployment.outputs.page_url }}     runs-on: ubuntu-latest     needs: build     steps:       - name: Deploy to GitHub Pages         id: deployment         uses: actions/deploy-pages@v2</p> </li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#52-framework-integration","title":"5.2. Framework Integration","text":"<p>React Application:</p> <pre><code># Install and build\nnpm install\nnpm run build\n\n# GitHub Actions deployment\n- name: Build React App\n  run: npm run build\n- name: Deploy\n  uses: actions/upload-pages-artifact@v2\n  with:\n    path: './build'\n</code></pre> <p>Vue.js Application:</p> <pre><code># Build configuration\nmodule.exports = {\n  publicPath: process.env.NODE_ENV === 'production'\n    ? '/repository-name/'\n    : '/',\n  outputDir: 'dist'\n}\n</code></pre> <p>Angular Application:</p> <pre><code># Build command\nng build --prod --base-href /repository-name/\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#53-performance-optimization","title":"5.3. Performance Optimization","text":"<p>Image Optimization:</p> <ul> <li>Use WebP format when possible</li> <li>Compress images appropriately</li> <li>Implement lazy loading</li> <li>Use responsive image techniques</li> </ul> <p>Asset Optimization:</p> <ul> <li>Minify CSS and JavaScript</li> <li>Use CDNs for external libraries</li> <li>Implement caching strategies</li> <li>Optimize font loading</li> </ul> <p>SEO Configuration:</p> <pre><code>&lt;!-- In HTML head --&gt;\n&lt;meta name=\"description\" content=\"Project description\"&gt;\n&lt;meta name=\"keywords\" content=\"keyword1, keyword2\"&gt;\n&lt;meta property=\"og:title\" content=\"Project Title\"&gt;\n&lt;meta property=\"og:description\" content=\"Project description\"&gt;\n&lt;meta property=\"og:image\" content=\"image-url\"&gt;\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#7-documentation-sites","title":"7. Documentation Sites","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#71-documentation-themes","title":"7.1. Documentation Themes","text":"<p>Just the Docs:</p> <pre><code># _config.yml\nremote_theme: pmarsceill/just-the-docs\n\n# Enable search\nsearch_enabled: true\n\n# Navigation structure\nnav_sort: case_insensitive\n</code></pre> <p>GitBook Style:</p> <pre><code># _config.yml\nremote_theme: sighingnow/jekyll-theme-gitbook\n\n# Table of contents\ntoc:\n  enabled: true\n  h_min: 1\n  h_max: 3\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#72-api-documentation","title":"7.2. API Documentation","text":"<p>OpenAPI/Swagger Integration:</p> <pre><code>---\nlayout: page\ntitle: API Documentation\n---\n\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/swagger-ui-dist@3.25.0/swagger-ui.css\" /&gt;\n&lt;div id=\"swagger-ui\"&gt;&lt;/div&gt;\n&lt;script src=\"https://unpkg.com/swagger-ui-dist@3.25.0/swagger-ui-bundle.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  SwaggerUIBundle({\n    url: '/api/openapi.yaml',\n    dom_id: '#swagger-ui',\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIBundle.presets.standalone\n    ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#8-monitoring-and-analytics","title":"8. Monitoring and Analytics","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#81-google-analytics-setup","title":"8.1. Google Analytics Setup","text":"<ul> <li> <p>Monitor your pages performance:</p> </li> <li> <p>Repository insights: Traffic and referrers</p> </li> <li>Pages analytics: Page views and unique visitors</li> <li>Performance metrics: Loading times and optimization</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#83-custom-analytics","title":"8.3. Custom Analytics","text":"<p>Implement custom tracking:</p> <pre><code>// Track downloads\ndocument.querySelectorAll('a[href$=\".zip\"]').forEach(link =&gt; {\n  link.addEventListener('click', () =&gt; {\n    gtag('event', 'download', {\n      'event_category': 'file',\n      'event_label': link.href\n    });\n  });\n});\n</code></pre>"},{"location":"04-Collaboration/08-GitHub-Pages/#9-best-practices","title":"9. Best Practices","text":"<p>GitHub Pages Best Practices</p> <p>Performance</p> <ul> <li>Optimize images and assets</li> <li>Use CDNs for external resources</li> <li>Implement caching strategies</li> <li>Monitor loading times</li> </ul> <p>SEO</p> <ul> <li>Use descriptive page titles</li> <li>Add meta descriptions</li> <li>Implement structured data</li> <li>Create XML sitemaps</li> </ul> <p>Accessibility</p> <ul> <li>Use semantic HTML</li> <li>Provide alt text for images</li> <li>Ensure keyboard navigation</li> <li>Test with screen readers</li> </ul> <p>Maintenance</p> <ul> <li>Keep dependencies updated</li> <li>Regular content reviews</li> <li>Monitor broken links</li> <li>Backup important content</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#10-troubleshooting","title":"10. Troubleshooting","text":""},{"location":"04-Collaboration/08-GitHub-Pages/#common-issues","title":"Common Issues","text":"<p>Site Not Building:</p> <ul> <li>Check Jekyll build errors in repository \u201cActions\u201d tab</li> <li>Verify <code>_config.yml</code> syntax</li> <li>Ensure all required files are present</li> <li>Check for plugin compatibility</li> </ul> <p>Custom Domain Issues:</p> <ul> <li>Verify DNS configuration</li> <li>Check domain verification status</li> <li>Ensure HTTPS is properly configured</li> <li>Wait for DNS propagation (up to 24 hours)</li> </ul> <p>Performance Problems:</p> <ul> <li>Optimize image sizes</li> <li>Minimize CSS and JavaScript</li> <li>Reduce external dependencies</li> <li>Use appropriate caching headers</li> </ul>"},{"location":"04-Collaboration/08-GitHub-Pages/#summary","title":"Summary","text":"<p>You now understand how to:</p> <p>\u2003\u2003\u2705\u2003Set up GitHub Pages for static website hosting \u2003\u2003\u2705\u2003Configure Jekyll for dynamic content generation \u2003\u2003\u2705\u2003Use custom domains with HTTPS support \u2003\u2003\u2705\u2003Create documentation and project websites \u2003\u2003\u2705\u2003Implement advanced deployment workflows \u2003\u2003\u2705\u2003Optimize performance and SEO \u2003\u2003\u2705\u2003Monitor analytics and site performance  </p>"}]}